   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.ChannelDevice,"a",%progbits
  18              		.align	2
  21              	ChannelDevice:
  22 0000 01       		.byte	1
  23 0001 02       		.byte	2
  24 0002 03       		.byte	3
  25 0003 04       		.byte	4
  26              		.section	.rodata.ChannelMode,"a",%progbits
  27              		.align	2
  30              	ChannelMode:
  31 0000 00000000 		.space	4
  32              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  33              		.align	2
  36              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  37 0000 00000000 		.space	8
  37      00000000 
  38              		.section	.text.TU1_Init,"ax",%progbits
  39              		.align	2
  40              		.global	TU1_Init
  41              		.code	16
  42              		.thumb_func
  44              	TU1_Init:
  45              	.LFB0:
  46              		.file 1 "../Generated_Code/TU1.c"
   1:../Generated_Code/TU1.c **** /** ###################################################################
   2:../Generated_Code/TU1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU1.c **** **     Filename    : TU1.c
   4:../Generated_Code/TU1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU1.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU1.c **** **     Version     : Component 01.139, Driver 01.09, CPU db: 3.00.000
   8:../Generated_Code/TU1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU1.c **** **     Date/Time   : 2013-05-17, 16:57, # CodeGen: 60
  10:../Generated_Code/TU1.c **** **     Abstract    :
  11:../Generated_Code/TU1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU1.c **** **     Settings    :
  14:../Generated_Code/TU1.c **** **          Component name                                 : TU1
  15:../Generated_Code/TU1.c **** **          Module name                                    : TPM0
  16:../Generated_Code/TU1.c **** **          Counter                                        : TPM0_CNT
  17:../Generated_Code/TU1.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU1.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU1.c **** **          Value type                                     : uint16_t
  20:../Generated_Code/TU1.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU1.c **** **            Counter frequency                            : Auto select
  22:../Generated_Code/TU1.c **** **          Counter restart                                : On-match
  23:../Generated_Code/TU1.c **** **            Period device                                : TPM0_MOD
  24:../Generated_Code/TU1.c **** **            Period                                       : 2 ms
  25:../Generated_Code/TU1.c **** **            Interrupt                                    : Disabled
  26:../Generated_Code/TU1.c **** **          Channel list                                   : 4
  27:../Generated_Code/TU1.c **** **            Channel 0                                    : 
  28:../Generated_Code/TU1.c **** **              Mode                                       : Compare
  29:../Generated_Code/TU1.c **** **                Compare                                  : TPM0_C1V
  30:../Generated_Code/TU1.c **** **                Offset                                   : 1 ms
  31:../Generated_Code/TU1.c **** **                Output on compare                        : Set
  32:../Generated_Code/TU1.c **** **                  Output on overrun                      : Clear
  33:../Generated_Code/TU1.c **** **                  Initial state                          : Low
  34:../Generated_Code/TU1.c **** **                  Output pin                             : TSI0_CH5/PTA4/I2C1_SDA/TPM0_CH1/NMI_b
  35:../Generated_Code/TU1.c **** **                  Output pin signal                      : 
  36:../Generated_Code/TU1.c **** **                Interrupt                                : Disabled
  37:../Generated_Code/TU1.c **** **            Channel 1                                    : 
  38:../Generated_Code/TU1.c **** **              Mode                                       : Compare
  39:../Generated_Code/TU1.c **** **                Compare                                  : TPM0_C2V
  40:../Generated_Code/TU1.c **** **                Offset                                   : 1 ms
  41:../Generated_Code/TU1.c **** **                Output on compare                        : Set
  42:../Generated_Code/TU1.c **** **                  Output on overrun                      : Clear
  43:../Generated_Code/TU1.c **** **                  Initial state                          : Low
  44:../Generated_Code/TU1.c **** **                  Output pin                             : PTA5/USB_CLKIN/TPM0_CH2
  45:../Generated_Code/TU1.c **** **                  Output pin signal                      : 
  46:../Generated_Code/TU1.c **** **                Interrupt                                : Disabled
  47:../Generated_Code/TU1.c **** **            Channel 2                                    : 
  48:../Generated_Code/TU1.c **** **              Mode                                       : Compare
  49:../Generated_Code/TU1.c **** **                Compare                                  : TPM0_C3V
  50:../Generated_Code/TU1.c **** **                Offset                                   : 1 ms
  51:../Generated_Code/TU1.c **** **                Output on compare                        : Set
  52:../Generated_Code/TU1.c **** **                  Output on overrun                      : Clear
  53:../Generated_Code/TU1.c **** **                  Initial state                          : Low
  54:../Generated_Code/TU1.c **** **                  Output pin                             : DAC0_OUT/ADC0_SE23/CMP0_IN4/PTE30/TPM0
  55:../Generated_Code/TU1.c **** **                  Output pin signal                      : 
  56:../Generated_Code/TU1.c **** **                Interrupt                                : Disabled
  57:../Generated_Code/TU1.c **** **            Channel 3                                    : 
  58:../Generated_Code/TU1.c **** **              Mode                                       : Compare
  59:../Generated_Code/TU1.c **** **                Compare                                  : TPM0_C4V
  60:../Generated_Code/TU1.c **** **                Offset                                   : 1 ms
  61:../Generated_Code/TU1.c **** **                Output on compare                        : Set
  62:../Generated_Code/TU1.c **** **                  Output on overrun                      : Clear
  63:../Generated_Code/TU1.c **** **                  Initial state                          : Low
  64:../Generated_Code/TU1.c **** **                  Output pin                             : PTE31/TPM0_CH4
  65:../Generated_Code/TU1.c **** **                  Output pin signal                      : 
  66:../Generated_Code/TU1.c **** **                Interrupt                                : Disabled
  67:../Generated_Code/TU1.c **** **          Initialization                                 : 
  68:../Generated_Code/TU1.c **** **            Enabled in init. code                        : yes
  69:../Generated_Code/TU1.c **** **            Auto initialization                          : no
  70:../Generated_Code/TU1.c **** **            Event mask                                   : 
  71:../Generated_Code/TU1.c **** **              OnCounterRestart                           : Disabled
  72:../Generated_Code/TU1.c **** **              OnChannel0                                 : Disabled
  73:../Generated_Code/TU1.c **** **              OnChannel1                                 : Disabled
  74:../Generated_Code/TU1.c **** **              OnChannel2                                 : Disabled
  75:../Generated_Code/TU1.c **** **              OnChannel3                                 : Disabled
  76:../Generated_Code/TU1.c **** **              OnChannel4                                 : Disabled
  77:../Generated_Code/TU1.c **** **              OnChannel5                                 : Disabled
  78:../Generated_Code/TU1.c **** **              OnChannel6                                 : Disabled
  79:../Generated_Code/TU1.c **** **              OnChannel7                                 : Disabled
  80:../Generated_Code/TU1.c **** **          CPU clock/configuration selection              : 
  81:../Generated_Code/TU1.c **** **            Clock configuration 0                        : This component enabled
  82:../Generated_Code/TU1.c **** **            Clock configuration 1                        : This component disabled
  83:../Generated_Code/TU1.c **** **            Clock configuration 2                        : This component disabled
  84:../Generated_Code/TU1.c **** **            Clock configuration 3                        : This component enabled
  85:../Generated_Code/TU1.c **** **            Clock configuration 4                        : This component enabled
  86:../Generated_Code/TU1.c **** **            Clock configuration 5                        : This component enabled
  87:../Generated_Code/TU1.c **** **            Clock configuration 6                        : This component enabled
  88:../Generated_Code/TU1.c **** **            Clock configuration 7                        : This component enabled
  89:../Generated_Code/TU1.c **** **     Contents    :
  90:../Generated_Code/TU1.c **** **         Init               - LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr);
  91:../Generated_Code/TU1.c **** **         Deinit             - void TU1_Deinit(LDD_TDeviceData *DeviceDataPtr);
  92:../Generated_Code/TU1.c **** **         GetPeriodTicks     - LDD_TError TU1_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU1_T
  93:../Generated_Code/TU1.c **** **         GetCounterValue    - TU1_TValueType TU1_GetCounterValue(LDD_TDeviceData *DeviceDataPtr);
  94:../Generated_Code/TU1.c **** **         SetOffsetTicks     - LDD_TError TU1_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  95:../Generated_Code/TU1.c **** **         GetOffsetTicks     - LDD_TError TU1_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  96:../Generated_Code/TU1.c **** **         SelectOutputAction - LDD_TError TU1_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, u
  97:../Generated_Code/TU1.c **** **
  98:../Generated_Code/TU1.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  99:../Generated_Code/TU1.c **** **     
 100:../Generated_Code/TU1.c **** **     http      : www.freescale.com
 101:../Generated_Code/TU1.c **** **     mail      : support@freescale.com
 102:../Generated_Code/TU1.c **** ** ###################################################################*/
 103:../Generated_Code/TU1.c **** 
 104:../Generated_Code/TU1.c **** /* MODULE TU1. */
 105:../Generated_Code/TU1.c **** 
 106:../Generated_Code/TU1.c **** #include "TU1.h"
 107:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} No RTOS includes */
 108:../Generated_Code/TU1.c **** #include "IO_Map.h"
 109:../Generated_Code/TU1.c **** 
 110:../Generated_Code/TU1.c **** /* List of channels used by component */
 111:../Generated_Code/TU1.c **** static const uint8_t ChannelDevice[TU1_NUMBER_OF_CHANNELS] = {0x01U,0x02U,0x03U,0x04U};
 112:../Generated_Code/TU1.c **** 
 113:../Generated_Code/TU1.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
 114:../Generated_Code/TU1.c **** static const uint8_t ChannelMode[TU1_NUMBER_OF_CHANNELS] = {0x00U,0x00U,0x00U,0x00U};
 115:../Generated_Code/TU1.c **** 
 116:../Generated_Code/TU1.c **** 
 117:../Generated_Code/TU1.c **** typedef struct {
 118:../Generated_Code/TU1.c ****   uint8_t InitCntr;                    /* Number of initialization */
 119:../Generated_Code/TU1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 120:../Generated_Code/TU1.c **** } TU1_TDeviceData;
 121:../Generated_Code/TU1.c **** 
 122:../Generated_Code/TU1.c **** typedef TU1_TDeviceData *TU1_TDeviceDataPtr; /* Pointer to the device data structure. */
 123:../Generated_Code/TU1.c **** 
 124:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 125:../Generated_Code/TU1.c **** static TU1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 126:../Generated_Code/TU1.c **** 
 127:../Generated_Code/TU1.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(TU1_CHANNEL_0_PIN | TU1_CHANNEL_1_PIN | TU1_CHANNEL_2_PIN
 128:../Generated_Code/TU1.c **** #define LAST_CHANNEL 0x03U
 129:../Generated_Code/TU1.c **** 
 130:../Generated_Code/TU1.c **** /* Internal method prototypes */
 131:../Generated_Code/TU1.c **** /*
 132:../Generated_Code/TU1.c **** ** ===================================================================
 133:../Generated_Code/TU1.c **** **     Method      :  TU1_Init (component TimerUnit_LDD)
 134:../Generated_Code/TU1.c **** **
 135:../Generated_Code/TU1.c **** **     Description :
 136:../Generated_Code/TU1.c **** **         Initializes the device. Allocates memory for the device data
 137:../Generated_Code/TU1.c **** **         structure, allocates interrupt vectors and sets interrupt
 138:../Generated_Code/TU1.c **** **         priority, sets pin routing, sets timing, etc. If the
 139:../Generated_Code/TU1.c **** **         property <"Enable in init. code"> is set to "yes" value then
 140:../Generated_Code/TU1.c **** **         the device is also enabled (see the description of the
 141:../Generated_Code/TU1.c **** **         <Enable> method). In this case the <Enable> method is not
 142:../Generated_Code/TU1.c **** **         necessary and needn't to be generated. This method can be
 143:../Generated_Code/TU1.c **** **         called only once. Before the second call of Init the <Deinit>
 144:../Generated_Code/TU1.c **** **         must be called first.
 145:../Generated_Code/TU1.c **** **     Parameters  :
 146:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 147:../Generated_Code/TU1.c **** **       * UserDataPtr     - Pointer to the user or
 148:../Generated_Code/TU1.c **** **                           RTOS specific data. This pointer will be
 149:../Generated_Code/TU1.c **** **                           passed as an event or callback parameter.
 150:../Generated_Code/TU1.c **** **     Returns     :
 151:../Generated_Code/TU1.c **** **         ---             - Pointer to the dynamically allocated
 152:../Generated_Code/TU1.c **** **                           private structure or NULL if there was an
 153:../Generated_Code/TU1.c **** **                           error.
 154:../Generated_Code/TU1.c **** ** ===================================================================
 155:../Generated_Code/TU1.c **** */
 156:../Generated_Code/TU1.c **** LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr)
 157:../Generated_Code/TU1.c **** {
  47              		.loc 1 157 0
  48              		.cfi_startproc
  49 0000 80B5     		push	{r7, lr}
  50              	.LCFI0:
  51              		.cfi_def_cfa_offset 8
  52              		.cfi_offset 7, -8
  53              		.cfi_offset 14, -4
  54 0002 84B0     		sub	sp, sp, #16
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 24
  57 0004 00AF     		add	r7, sp, #0
  58              	.LCFI2:
  59              		.cfi_def_cfa_register 7
  60 0006 7860     		str	r0, [r7, #4]
 158:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv;
 159:../Generated_Code/TU1.c **** 
 160:../Generated_Code/TU1.c ****   if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID] == NULL) {
  61              		.loc 1 160 0
  62 0008 444B     		ldr	r3, .L4
  63 000a 9B68     		ldr	r3, [r3, #8]
  64 000c 002B     		cmp	r3, #0
  65 000e 73D1     		bne	.L2
 161:../Generated_Code/TU1.c ****     /* Allocate device structure */
 162:../Generated_Code/TU1.c ****     /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointe
 163:../Generated_Code/TU1.c ****     DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  66              		.loc 1 163 0
  67 0010 434B     		ldr	r3, .L4+4
  68 0012 FB60     		str	r3, [r7, #12]
 164:../Generated_Code/TU1.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  69              		.loc 1 164 0
  70 0014 FB68     		ldr	r3, [r7, #12]
  71 0016 7A68     		ldr	r2, [r7, #4]
  72 0018 5A60     		str	r2, [r3, #4]
 165:../Generated_Code/TU1.c ****     DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  73              		.loc 1 165 0
  74 001a FB68     		ldr	r3, [r7, #12]
  75 001c 0122     		mov	r2, #1
  76 001e 1A70     		strb	r2, [r3]
 166:../Generated_Code/TU1.c ****   }
 167:../Generated_Code/TU1.c ****   else {
 168:../Generated_Code/TU1.c ****     /* Memory is already allocated */
 169:../Generated_Code/TU1.c ****     DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID];
 170:../Generated_Code/TU1.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 171:../Generated_Code/TU1.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 172:../Generated_Code/TU1.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 173:../Generated_Code/TU1.c ****   }
 174:../Generated_Code/TU1.c ****   /* SIM_SCGC6: TPM0=1 */
 175:../Generated_Code/TU1.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;                                                   
  77              		.loc 1 175 0
  78 0020 404A     		ldr	r2, .L4+8
  79 0022 4049     		ldr	r1, .L4+8
  80 0024 404B     		ldr	r3, .L4+12
  81 0026 CB58     		ldr	r3, [r1, r3]
  82 0028 8021     		mov	r1, #128
  83 002a 4904     		lsl	r1, r1, #17
  84 002c 1943     		orr	r1, r3
  85 002e 3E4B     		ldr	r3, .L4+12
  86 0030 D150     		str	r1, [r2, r3]
 176:../Generated_Code/TU1.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 177:../Generated_Code/TU1.c ****   TPM0_SC = 0x00U;                     /* Clear status and control register */
  87              		.loc 1 177 0
  88 0032 3E4B     		ldr	r3, .L4+16
  89 0034 0022     		mov	r2, #0
  90 0036 1A60     		str	r2, [r3]
 178:../Generated_Code/TU1.c ****   /* TPM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 179:../Generated_Code/TU1.c ****   TPM0_CNT = 0x00U;                    /* Reset counter register */
  91              		.loc 1 179 0
  92 0038 3C4B     		ldr	r3, .L4+16
  93 003a 0022     		mov	r2, #0
  94 003c 5A60     		str	r2, [r3, #4]
 180:../Generated_Code/TU1.c ****   /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 181:../Generated_Code/TU1.c ****   TPM0_C0SC = 0x00U;                   /* Clear channel status and control register */
  95              		.loc 1 181 0
  96 003e 3B4B     		ldr	r3, .L4+16
  97 0040 0022     		mov	r2, #0
  98 0042 DA60     		str	r2, [r3, #12]
 182:../Generated_Code/TU1.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 183:../Generated_Code/TU1.c ****   TPM0_C1SC = 0x00U;                   /* Clear channel status and control register */
  99              		.loc 1 183 0
 100 0044 394B     		ldr	r3, .L4+16
 101 0046 0022     		mov	r2, #0
 102 0048 5A61     		str	r2, [r3, #20]
 184:../Generated_Code/TU1.c ****   /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 185:../Generated_Code/TU1.c ****   TPM0_C2SC = 0x00U;                   /* Clear channel status and control register */
 103              		.loc 1 185 0
 104 004a 384B     		ldr	r3, .L4+16
 105 004c 0022     		mov	r2, #0
 106 004e DA61     		str	r2, [r3, #28]
 186:../Generated_Code/TU1.c ****   /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 187:../Generated_Code/TU1.c ****   TPM0_C3SC = 0x00U;                   /* Clear channel status and control register */
 107              		.loc 1 187 0
 108 0050 364B     		ldr	r3, .L4+16
 109 0052 0022     		mov	r2, #0
 110 0054 5A62     		str	r2, [r3, #36]
 188:../Generated_Code/TU1.c ****   /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 189:../Generated_Code/TU1.c ****   TPM0_C4SC = 0x00U;                   /* Clear channel status and control register */
 111              		.loc 1 189 0
 112 0056 354B     		ldr	r3, .L4+16
 113 0058 0022     		mov	r2, #0
 114 005a DA62     		str	r2, [r3, #44]
 190:../Generated_Code/TU1.c ****   /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 191:../Generated_Code/TU1.c ****   TPM0_C5SC = 0x00U;                   /* Clear channel status and control register */
 115              		.loc 1 191 0
 116 005c 334B     		ldr	r3, .L4+16
 117 005e 0022     		mov	r2, #0
 118 0060 5A63     		str	r2, [r3, #52]
 192:../Generated_Code/TU1.c ****   /* TPM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 193:../Generated_Code/TU1.c ****   TPM0_MOD = TPM_MOD_MOD(0xBB7F);      /* Set up modulo register */
 119              		.loc 1 193 0
 120 0062 324B     		ldr	r3, .L4+16
 121 0064 324A     		ldr	r2, .L4+20
 122 0066 9A60     		str	r2, [r3, #8]
 194:../Generated_Code/TU1.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 195:../Generated_Code/TU1.c ****   TPM0_C1SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 123              		.loc 1 195 0
 124 0068 304B     		ldr	r3, .L4+16
 125 006a 2C22     		mov	r2, #44
 126 006c 5A61     		str	r2, [r3, #20]
 196:../Generated_Code/TU1.c ****   /* TPM0_C1V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 197:../Generated_Code/TU1.c ****   TPM0_C1V = TPM_CnV_VAL(0x5DC0);      /* Set up channel value register */
 127              		.loc 1 197 0
 128 006e 2F4B     		ldr	r3, .L4+16
 129 0070 304A     		ldr	r2, .L4+24
 130 0072 9A61     		str	r2, [r3, #24]
 198:../Generated_Code/TU1.c ****   /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 199:../Generated_Code/TU1.c ****   TPM0_C2SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 131              		.loc 1 199 0
 132 0074 2D4B     		ldr	r3, .L4+16
 133 0076 2C22     		mov	r2, #44
 134 0078 DA61     		str	r2, [r3, #28]
 200:../Generated_Code/TU1.c ****   /* TPM0_C2V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 201:../Generated_Code/TU1.c ****   TPM0_C2V = TPM_CnV_VAL(0x5DC0);      /* Set up channel value register */
 135              		.loc 1 201 0
 136 007a 2C4B     		ldr	r3, .L4+16
 137 007c 2D4A     		ldr	r2, .L4+24
 138 007e 1A62     		str	r2, [r3, #32]
 202:../Generated_Code/TU1.c ****   /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 203:../Generated_Code/TU1.c ****   TPM0_C3SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 139              		.loc 1 203 0
 140 0080 2A4B     		ldr	r3, .L4+16
 141 0082 2C22     		mov	r2, #44
 142 0084 5A62     		str	r2, [r3, #36]
 204:../Generated_Code/TU1.c ****   /* TPM0_C3V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 205:../Generated_Code/TU1.c ****   TPM0_C3V = TPM_CnV_VAL(0x5DC0);      /* Set up channel value register */
 143              		.loc 1 205 0
 144 0086 294B     		ldr	r3, .L4+16
 145 0088 2A4A     		ldr	r2, .L4+24
 146 008a 9A62     		str	r2, [r3, #40]
 206:../Generated_Code/TU1.c ****   /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 207:../Generated_Code/TU1.c ****   TPM0_C4SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 147              		.loc 1 207 0
 148 008c 274B     		ldr	r3, .L4+16
 149 008e 2C22     		mov	r2, #44
 150 0090 DA62     		str	r2, [r3, #44]
 208:../Generated_Code/TU1.c ****   /* TPM0_C4V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 209:../Generated_Code/TU1.c ****   TPM0_C4V = TPM_CnV_VAL(0x5DC0);      /* Set up channel value register */
 151              		.loc 1 209 0
 152 0092 264B     		ldr	r3, .L4+16
 153 0094 274A     		ldr	r2, .L4+24
 154 0096 1A63     		str	r2, [r3, #48]
 210:../Generated_Code/TU1.c ****   /* PORTA_PCR4: ISF=0,MUX=3 */
 211:../Generated_Code/TU1.c ****   PORTA_PCR4 = (uint32_t)((PORTA_PCR4 & (uint32_t)~(uint32_t)(
 155              		.loc 1 211 0
 156 0098 274B     		ldr	r3, .L4+28
 157 009a 274A     		ldr	r2, .L4+28
 158 009c 1269     		ldr	r2, [r2, #16]
 159 009e 111C     		mov	r1, r2
 160 00a0 264A     		ldr	r2, .L4+32
 161 00a2 0A40     		and	r2, r1
 162 00a4 C021     		mov	r1, #192
 163 00a6 8900     		lsl	r1, r1, #2
 164 00a8 0A43     		orr	r2, r1
 165 00aa 1A61     		str	r2, [r3, #16]
 212:../Generated_Code/TU1.c ****                 PORT_PCR_ISF_MASK |
 213:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x04)
 214:../Generated_Code/TU1.c ****                )) | (uint32_t)(
 215:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x03)
 216:../Generated_Code/TU1.c ****                ));                                                  
 217:../Generated_Code/TU1.c ****   /* PORTA_PCR5: ISF=0,MUX=3 */
 218:../Generated_Code/TU1.c ****   PORTA_PCR5 = (uint32_t)((PORTA_PCR5 & (uint32_t)~(uint32_t)(
 166              		.loc 1 218 0
 167 00ac 224B     		ldr	r3, .L4+28
 168 00ae 224A     		ldr	r2, .L4+28
 169 00b0 5269     		ldr	r2, [r2, #20]
 170 00b2 111C     		mov	r1, r2
 171 00b4 214A     		ldr	r2, .L4+32
 172 00b6 0A40     		and	r2, r1
 173 00b8 C021     		mov	r1, #192
 174 00ba 8900     		lsl	r1, r1, #2
 175 00bc 0A43     		orr	r2, r1
 176 00be 5A61     		str	r2, [r3, #20]
 219:../Generated_Code/TU1.c ****                 PORT_PCR_ISF_MASK |
 220:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x04)
 221:../Generated_Code/TU1.c ****                )) | (uint32_t)(
 222:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x03)
 223:../Generated_Code/TU1.c ****                ));                                                  
 224:../Generated_Code/TU1.c ****   /* PORTE_PCR30: ISF=0,MUX=3 */
 225:../Generated_Code/TU1.c ****   PORTE_PCR30 = (uint32_t)((PORTE_PCR30 & (uint32_t)~(uint32_t)(
 177              		.loc 1 225 0
 178 00c0 1F4B     		ldr	r3, .L4+36
 179 00c2 1F4A     		ldr	r2, .L4+36
 180 00c4 926F     		ldr	r2, [r2, #120]
 181 00c6 111C     		mov	r1, r2
 182 00c8 1C4A     		ldr	r2, .L4+32
 183 00ca 0A40     		and	r2, r1
 184 00cc C021     		mov	r1, #192
 185 00ce 8900     		lsl	r1, r1, #2
 186 00d0 0A43     		orr	r2, r1
 187 00d2 9A67     		str	r2, [r3, #120]
 226:../Generated_Code/TU1.c ****                  PORT_PCR_ISF_MASK |
 227:../Generated_Code/TU1.c ****                  PORT_PCR_MUX(0x04)
 228:../Generated_Code/TU1.c ****                 )) | (uint32_t)(
 229:../Generated_Code/TU1.c ****                  PORT_PCR_MUX(0x03)
 230:../Generated_Code/TU1.c ****                 ));                                                  
 231:../Generated_Code/TU1.c ****   /* PORTE_PCR31: ISF=0,MUX=3 */
 232:../Generated_Code/TU1.c ****   PORTE_PCR31 = (uint32_t)((PORTE_PCR31 & (uint32_t)~(uint32_t)(
 188              		.loc 1 232 0
 189 00d4 1A4B     		ldr	r3, .L4+36
 190 00d6 1A4A     		ldr	r2, .L4+36
 191 00d8 D26F     		ldr	r2, [r2, #124]
 192 00da 111C     		mov	r1, r2
 193 00dc 174A     		ldr	r2, .L4+32
 194 00de 0A40     		and	r2, r1
 195 00e0 C021     		mov	r1, #192
 196 00e2 8900     		lsl	r1, r1, #2
 197 00e4 0A43     		orr	r2, r1
 198 00e6 DA67     		str	r2, [r3, #124]
 233:../Generated_Code/TU1.c ****                  PORT_PCR_ISF_MASK |
 234:../Generated_Code/TU1.c ****                  PORT_PCR_MUX(0x04)
 235:../Generated_Code/TU1.c ****                 )) | (uint32_t)(
 236:../Generated_Code/TU1.c ****                  PORT_PCR_MUX(0x03)
 237:../Generated_Code/TU1.c ****                 ));                                                  
 238:../Generated_Code/TU1.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 239:../Generated_Code/TU1.c ****   TPM0_SC = TPM_SC_CMOD(0x01);         /* Set up status and control register */
 199              		.loc 1 239 0
 200 00e8 104B     		ldr	r3, .L4+16
 201 00ea 0822     		mov	r2, #8
 202 00ec 1A60     		str	r2, [r3]
 240:../Generated_Code/TU1.c ****   /* Registration of the device structure */
 241:../Generated_Code/TU1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
 203              		.loc 1 241 0
 204 00ee 0B4B     		ldr	r3, .L4
 205 00f0 FA68     		ldr	r2, [r7, #12]
 206 00f2 9A60     		str	r2, [r3, #8]
 242:../Generated_Code/TU1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 207              		.loc 1 242 0
 208 00f4 FB68     		ldr	r3, [r7, #12]
 209 00f6 0CE0     		b	.L3
 210              	.L2:
 169:../Generated_Code/TU1.c ****     DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID];
 211              		.loc 1 169 0
 212 00f8 084B     		ldr	r3, .L4
 213 00fa 9B68     		ldr	r3, [r3, #8]
 214 00fc FB60     		str	r3, [r7, #12]
 170:../Generated_Code/TU1.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 215              		.loc 1 170 0
 216 00fe FB68     		ldr	r3, [r7, #12]
 217 0100 7A68     		ldr	r2, [r7, #4]
 218 0102 5A60     		str	r2, [r3, #4]
 171:../Generated_Code/TU1.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 219              		.loc 1 171 0
 220 0104 FB68     		ldr	r3, [r7, #12]
 221 0106 1B78     		ldrb	r3, [r3]
 222 0108 0133     		add	r3, r3, #1
 223 010a DAB2     		uxtb	r2, r3
 224 010c FB68     		ldr	r3, [r7, #12]
 225 010e 1A70     		strb	r2, [r3]
 172:../Generated_Code/TU1.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 226              		.loc 1 172 0
 227 0110 FB68     		ldr	r3, [r7, #12]
 228              	.L3:
 243:../Generated_Code/TU1.c **** }
 229              		.loc 1 243 0
 230 0112 181C     		mov	r0, r3
 231 0114 BD46     		mov	sp, r7
 232 0116 04B0     		add	sp, sp, #16
 233              		@ sp needed for prologue
 234 0118 80BD     		pop	{r7, pc}
 235              	.L5:
 236 011a C046     		.align	2
 237              	.L4:
 238 011c 00000000 		.word	PE_LDD_DeviceDataList
 239 0120 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 240 0124 00700440 		.word	1074032640
 241 0128 3C100000 		.word	4156
 242 012c 00800340 		.word	1073971200
 243 0130 7FBB0000 		.word	47999
 244 0134 C05D0000 		.word	24000
 245 0138 00900440 		.word	1074040832
 246 013c FFF8FFFE 		.word	-16779009
 247 0140 00D00440 		.word	1074057216
 248              		.cfi_endproc
 249              	.LFE0:
 251              		.section	.text.TU1_Deinit,"ax",%progbits
 252              		.align	2
 253              		.global	TU1_Deinit
 254              		.code	16
 255              		.thumb_func
 257              	TU1_Deinit:
 258              	.LFB1:
 244:../Generated_Code/TU1.c **** 
 245:../Generated_Code/TU1.c **** /*
 246:../Generated_Code/TU1.c **** ** ===================================================================
 247:../Generated_Code/TU1.c **** **     Method      :  TU1_Deinit (component TimerUnit_LDD)
 248:../Generated_Code/TU1.c **** **
 249:../Generated_Code/TU1.c **** **     Description :
 250:../Generated_Code/TU1.c **** **         Deinitializes the device. Switches off the device, frees the
 251:../Generated_Code/TU1.c **** **         device data structure memory, interrupts vectors, etc.
 252:../Generated_Code/TU1.c **** **     Parameters  :
 253:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 254:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 255:../Generated_Code/TU1.c **** **                           pointer returned by Init method
 256:../Generated_Code/TU1.c **** **     Returns     : Nothing
 257:../Generated_Code/TU1.c **** ** ===================================================================
 258:../Generated_Code/TU1.c **** */
 259:../Generated_Code/TU1.c **** void TU1_Deinit(LDD_TDeviceData *DeviceDataPtr)
 260:../Generated_Code/TU1.c **** {
 259              		.loc 1 260 0
 260              		.cfi_startproc
 261 0000 80B5     		push	{r7, lr}
 262              	.LCFI3:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 84B0     		sub	sp, sp, #16
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 24
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI5:
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 261:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv = (TU1_TDeviceData *)DeviceDataPtr;
 273              		.loc 1 261 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a FB60     		str	r3, [r7, #12]
 262:../Generated_Code/TU1.c **** 
 263:../Generated_Code/TU1.c ****   DeviceDataPrv->InitCntr--;           /* Decrement counter of initialization */
 276              		.loc 1 263 0
 277 000c FB68     		ldr	r3, [r7, #12]
 278 000e 1B78     		ldrb	r3, [r3]
 279 0010 013B     		sub	r3, r3, #1
 280 0012 DAB2     		uxtb	r2, r3
 281 0014 FB68     		ldr	r3, [r7, #12]
 282 0016 1A70     		strb	r2, [r3]
 264:../Generated_Code/TU1.c ****   if ((DeviceDataPrv->InitCntr) > 0U) { /* Is the result greater or equal than zero ? */
 283              		.loc 1 264 0
 284 0018 FB68     		ldr	r3, [r7, #12]
 285 001a 1B78     		ldrb	r3, [r3]
 286 001c 002B     		cmp	r3, #0
 287 001e 09D1     		bne	.L9
 288              	.L7:
 265:../Generated_Code/TU1.c ****     return;                            /* If yes then de-initialization isn't complete */
 266:../Generated_Code/TU1.c ****   }
 267:../Generated_Code/TU1.c ****   TPM_PDD_SelectPrescalerSource(TPM0_BASE_PTR, TPM_PDD_DISABLED);
 289              		.loc 1 267 0
 290 0020 064B     		ldr	r3, .L10
 291 0022 064A     		ldr	r2, .L10
 292 0024 1268     		ldr	r2, [r2]
 293 0026 9821     		mov	r1, #152
 294 0028 8A43     		bic	r2, r1
 295 002a 1A60     		str	r2, [r3]
 268:../Generated_Code/TU1.c ****   /* Unregistration of the device structure */
 269:../Generated_Code/TU1.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID);
 296              		.loc 1 269 0
 297 002c 044B     		ldr	r3, .L10+4
 298 002e 0022     		mov	r2, #0
 299 0030 9A60     		str	r2, [r3, #8]
 300 0032 00E0     		b	.L6
 301              	.L9:
 265:../Generated_Code/TU1.c ****     return;                            /* If yes then de-initialization isn't complete */
 302              		.loc 1 265 0
 303 0034 C046     		mov	r8, r8
 304              	.L6:
 270:../Generated_Code/TU1.c ****   /* Deallocation of the device structure */
 271:../Generated_Code/TU1.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 272:../Generated_Code/TU1.c **** }
 305              		.loc 1 272 0
 306 0036 BD46     		mov	sp, r7
 307 0038 04B0     		add	sp, sp, #16
 308              		@ sp needed for prologue
 309 003a 80BD     		pop	{r7, pc}
 310              	.L11:
 311              		.align	2
 312              	.L10:
 313 003c 00800340 		.word	1073971200
 314 0040 00000000 		.word	PE_LDD_DeviceDataList
 315              		.cfi_endproc
 316              	.LFE1:
 318              		.section	.text.TU1_GetPeriodTicks,"ax",%progbits
 319              		.align	2
 320              		.global	TU1_GetPeriodTicks
 321              		.code	16
 322              		.thumb_func
 324              	TU1_GetPeriodTicks:
 325              	.LFB2:
 273:../Generated_Code/TU1.c **** 
 274:../Generated_Code/TU1.c **** /*
 275:../Generated_Code/TU1.c **** ** ===================================================================
 276:../Generated_Code/TU1.c **** **     Method      :  TU1_GetPeriodTicks (component TimerUnit_LDD)
 277:../Generated_Code/TU1.c **** **
 278:../Generated_Code/TU1.c **** **     Description :
 279:../Generated_Code/TU1.c **** **         Returns the number of counter ticks before re-initialization.
 280:../Generated_Code/TU1.c **** **         See also method <SetPeriodTicks>. This method is available
 281:../Generated_Code/TU1.c **** **         only if the property <"Counter restart"> is switched to
 282:../Generated_Code/TU1.c **** **         'on-match' value.
 283:../Generated_Code/TU1.c **** **     Parameters  :
 284:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 285:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 286:../Generated_Code/TU1.c **** **                           pointer returned by <Init> method.
 287:../Generated_Code/TU1.c **** **       * TicksPtr        - Pointer to return value of the
 288:../Generated_Code/TU1.c **** **                           number of counter ticks before
 289:../Generated_Code/TU1.c **** **                           re-initialization
 290:../Generated_Code/TU1.c **** **     Returns     :
 291:../Generated_Code/TU1.c **** **         ---             - Error code, possible codes:
 292:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 293:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 294:../Generated_Code/TU1.c **** **                           the active clock configuration
 295:../Generated_Code/TU1.c **** ** ===================================================================
 296:../Generated_Code/TU1.c **** */
 297:../Generated_Code/TU1.c **** LDD_TError TU1_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU1_TValueType *TicksPtr)
 298:../Generated_Code/TU1.c **** {
 326              		.loc 1 298 0
 327              		.cfi_startproc
 328 0000 80B5     		push	{r7, lr}
 329              	.LCFI6:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 0002 84B0     		sub	sp, sp, #16
 334              	.LCFI7:
 335              		.cfi_def_cfa_offset 24
 336 0004 00AF     		add	r7, sp, #0
 337              	.LCFI8:
 338              		.cfi_def_cfa_register 7
 339 0006 7860     		str	r0, [r7, #4]
 340 0008 3960     		str	r1, [r7]
 299:../Generated_Code/TU1.c ****   uint16_t tmp;
 300:../Generated_Code/TU1.c **** 
 301:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 302:../Generated_Code/TU1.c ****   tmp = (uint16_t)(TPM_PDD_ReadModuloReg(TPM0_BASE_PTR));
 341              		.loc 1 302 0
 342 000a 0B4B     		ldr	r3, .L13
 343 000c 9B68     		ldr	r3, [r3, #8]
 344 000e 1A1C     		mov	r2, r3
 345 0010 3B1C     		mov	r3, r7
 346 0012 0E33     		add	r3, r3, #14
 347 0014 1A80     		strh	r2, [r3]
 303:../Generated_Code/TU1.c ****   *TicksPtr = (TU1_TValueType)++tmp;
 348              		.loc 1 303 0
 349 0016 3B1C     		mov	r3, r7
 350 0018 0E33     		add	r3, r3, #14
 351 001a 3A1C     		mov	r2, r7
 352 001c 0E32     		add	r2, r2, #14
 353 001e 1288     		ldrh	r2, [r2]
 354 0020 0132     		add	r2, r2, #1
 355 0022 1A80     		strh	r2, [r3]
 356 0024 3B68     		ldr	r3, [r7]
 357 0026 3A1C     		mov	r2, r7
 358 0028 0E32     		add	r2, r2, #14
 359 002a 1288     		ldrh	r2, [r2]
 360 002c 1A80     		strh	r2, [r3]
 304:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 361              		.loc 1 304 0
 362 002e 0023     		mov	r3, #0
 305:../Generated_Code/TU1.c **** }
 363              		.loc 1 305 0
 364 0030 181C     		mov	r0, r3
 365 0032 BD46     		mov	sp, r7
 366 0034 04B0     		add	sp, sp, #16
 367              		@ sp needed for prologue
 368 0036 80BD     		pop	{r7, pc}
 369              	.L14:
 370              		.align	2
 371              	.L13:
 372 0038 00800340 		.word	1073971200
 373              		.cfi_endproc
 374              	.LFE2:
 376              		.section	.text.TU1_GetCounterValue,"ax",%progbits
 377              		.align	2
 378              		.global	TU1_GetCounterValue
 379              		.code	16
 380              		.thumb_func
 382              	TU1_GetCounterValue:
 383              	.LFB3:
 306:../Generated_Code/TU1.c **** 
 307:../Generated_Code/TU1.c **** /*
 308:../Generated_Code/TU1.c **** ** ===================================================================
 309:../Generated_Code/TU1.c **** **     Method      :  TU1_GetCounterValue (component TimerUnit_LDD)
 310:../Generated_Code/TU1.c **** **
 311:../Generated_Code/TU1.c **** **     Description :
 312:../Generated_Code/TU1.c **** **         Returns the content of counter register. This method can be
 313:../Generated_Code/TU1.c **** **         used both if counter is enabled and if counter is disabled.
 314:../Generated_Code/TU1.c **** **         The method is not available if HW doesn't allow reading of
 315:../Generated_Code/TU1.c **** **         the counter.
 316:../Generated_Code/TU1.c **** **     Parameters  :
 317:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 318:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 319:../Generated_Code/TU1.c **** **                           pointer returned by <Init> method.
 320:../Generated_Code/TU1.c **** **     Returns     :
 321:../Generated_Code/TU1.c **** **         ---             - Counter value (number of counted ticks).
 322:../Generated_Code/TU1.c **** ** ===================================================================
 323:../Generated_Code/TU1.c **** */
 324:../Generated_Code/TU1.c **** TU1_TValueType TU1_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 325:../Generated_Code/TU1.c **** {
 384              		.loc 1 325 0
 385              		.cfi_startproc
 386 0000 80B5     		push	{r7, lr}
 387              	.LCFI9:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 82B0     		sub	sp, sp, #8
 392              	.LCFI10:
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              	.LCFI11:
 396              		.cfi_def_cfa_register 7
 397 0006 7860     		str	r0, [r7, #4]
 326:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 327:../Generated_Code/TU1.c ****   return (TU1_TValueType)TPM_PDD_ReadCounterReg(TPM0_BASE_PTR);
 398              		.loc 1 327 0
 399 0008 034B     		ldr	r3, .L16
 400 000a 5B68     		ldr	r3, [r3, #4]
 401 000c 9BB2     		uxth	r3, r3
 328:../Generated_Code/TU1.c **** }
 402              		.loc 1 328 0
 403 000e 181C     		mov	r0, r3
 404 0010 BD46     		mov	sp, r7
 405 0012 02B0     		add	sp, sp, #8
 406              		@ sp needed for prologue
 407 0014 80BD     		pop	{r7, pc}
 408              	.L17:
 409 0016 C046     		.align	2
 410              	.L16:
 411 0018 00800340 		.word	1073971200
 412              		.cfi_endproc
 413              	.LFE3:
 415              		.section	.text.TU1_SetOffsetTicks,"ax",%progbits
 416              		.align	2
 417              		.global	TU1_SetOffsetTicks
 418              		.code	16
 419              		.thumb_func
 421              	TU1_SetOffsetTicks:
 422              	.LFB4:
 329:../Generated_Code/TU1.c **** 
 330:../Generated_Code/TU1.c **** /*
 331:../Generated_Code/TU1.c **** ** ===================================================================
 332:../Generated_Code/TU1.c **** **     Method      :  TU1_SetOffsetTicks (component TimerUnit_LDD)
 333:../Generated_Code/TU1.c **** **
 334:../Generated_Code/TU1.c **** **     Description :
 335:../Generated_Code/TU1.c **** **         Sets the new offset value to channel specified by the
 336:../Generated_Code/TU1.c **** **         parameter ChannelIdx. It is user responsibility to use value
 337:../Generated_Code/TU1.c **** **         below selected period. This method is available when at
 338:../Generated_Code/TU1.c **** **         least one channel is configured.
 339:../Generated_Code/TU1.c **** **     Parameters  :
 340:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 341:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 342:../Generated_Code/TU1.c **** **                           pointer returned by <Init> method.
 343:../Generated_Code/TU1.c **** **         ChannelIdx      - Index of the component
 344:../Generated_Code/TU1.c **** **                           channel.
 345:../Generated_Code/TU1.c **** **         Ticks           - Number of counter ticks to compare
 346:../Generated_Code/TU1.c **** **                           match.
 347:../Generated_Code/TU1.c **** **     Returns     :
 348:../Generated_Code/TU1.c **** **         ---             - Error code, possible codes:
 349:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 350:../Generated_Code/TU1.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 351:../Generated_Code/TU1.c **** **                           out of possible range.
 352:../Generated_Code/TU1.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 353:../Generated_Code/TU1.c **** **                           selected for selected channel
 354:../Generated_Code/TU1.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 355:../Generated_Code/TU1.c **** **                           possible range.
 356:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 357:../Generated_Code/TU1.c **** **                           the active clock configuration
 358:../Generated_Code/TU1.c **** ** ===================================================================
 359:../Generated_Code/TU1.c **** */
 360:../Generated_Code/TU1.c **** LDD_TError TU1_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU1_TValueType Ti
 361:../Generated_Code/TU1.c **** {
 423              		.loc 1 361 0
 424              		.cfi_startproc
 425 0000 80B5     		push	{r7, lr}
 426              	.LCFI12:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 82B0     		sub	sp, sp, #8
 431              	.LCFI13:
 432              		.cfi_def_cfa_offset 16
 433 0004 00AF     		add	r7, sp, #0
 434              	.LCFI14:
 435              		.cfi_def_cfa_register 7
 436 0006 7860     		str	r0, [r7, #4]
 437 0008 FB1C     		add	r3, r7, #3
 438 000a 1970     		strb	r1, [r3]
 439 000c 3B1C     		mov	r3, r7
 440 000e 1A80     		strh	r2, [r3]
 362:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 363:../Generated_Code/TU1.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 364:../Generated_Code/TU1.c ****      property to the "yes" value in the "Configuration inspector" */
 365:../Generated_Code/TU1.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 441              		.loc 1 365 0
 442 0010 FB1C     		add	r3, r7, #3
 443 0012 1B78     		ldrb	r3, [r3]
 444 0014 032B     		cmp	r3, #3
 445 0016 01D9     		bls	.L19
 366:../Generated_Code/TU1.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 446              		.loc 1 366 0
 447 0018 8223     		mov	r3, #130
 448 001a 13E0     		b	.L20
 449              	.L19:
 367:../Generated_Code/TU1.c ****   }
 368:../Generated_Code/TU1.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 450              		.loc 1 368 0
 451 001c FB1C     		add	r3, r7, #3
 452 001e 1B78     		ldrb	r3, [r3]
 453 0020 0A4A     		ldr	r2, .L22
 454 0022 D35C     		ldrb	r3, [r2, r3]
 455 0024 002B     		cmp	r3, #0
 456 0026 01D0     		beq	.L21
 369:../Generated_Code/TU1.c ****     return ERR_NOTAVAIL;               /* If not then error */
 457              		.loc 1 369 0
 458 0028 0923     		mov	r3, #9
 459 002a 0BE0     		b	.L20
 460              	.L21:
 370:../Generated_Code/TU1.c ****   }
 371:../Generated_Code/TU1.c ****   TPM_PDD_WriteChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
 461              		.loc 1 371 0
 462 002c 0849     		ldr	r1, .L22+4
 463 002e FB1C     		add	r3, r7, #3
 464 0030 1B78     		ldrb	r3, [r3]
 465 0032 084A     		ldr	r2, .L22+8
 466 0034 D35C     		ldrb	r3, [r2, r3]
 467 0036 3A1C     		mov	r2, r7
 468 0038 1288     		ldrh	r2, [r2]
 469 003a 0133     		add	r3, r3, #1
 470 003c DB00     		lsl	r3, r3, #3
 471 003e CB18     		add	r3, r1, r3
 472 0040 9A60     		str	r2, [r3, #8]
 372:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 473              		.loc 1 372 0
 474 0042 0023     		mov	r3, #0
 475              	.L20:
 373:../Generated_Code/TU1.c **** }
 476              		.loc 1 373 0
 477 0044 181C     		mov	r0, r3
 478 0046 BD46     		mov	sp, r7
 479 0048 02B0     		add	sp, sp, #8
 480              		@ sp needed for prologue
 481 004a 80BD     		pop	{r7, pc}
 482              	.L23:
 483              		.align	2
 484              	.L22:
 485 004c 00000000 		.word	ChannelMode
 486 0050 00800340 		.word	1073971200
 487 0054 00000000 		.word	ChannelDevice
 488              		.cfi_endproc
 489              	.LFE4:
 491              		.section	.text.TU1_GetOffsetTicks,"ax",%progbits
 492              		.align	2
 493              		.global	TU1_GetOffsetTicks
 494              		.code	16
 495              		.thumb_func
 497              	TU1_GetOffsetTicks:
 498              	.LFB5:
 374:../Generated_Code/TU1.c **** 
 375:../Generated_Code/TU1.c **** /*
 376:../Generated_Code/TU1.c **** ** ===================================================================
 377:../Generated_Code/TU1.c **** **     Method      :  TU1_GetOffsetTicks (component TimerUnit_LDD)
 378:../Generated_Code/TU1.c **** **
 379:../Generated_Code/TU1.c **** **     Description :
 380:../Generated_Code/TU1.c **** **         Returns the number of counter ticks to compare match channel
 381:../Generated_Code/TU1.c **** **         specified by the parameter ChannelIdx. See also method
 382:../Generated_Code/TU1.c **** **         <SetOffsetTicks>. This method is available when at least one
 383:../Generated_Code/TU1.c **** **         channel is configured.
 384:../Generated_Code/TU1.c **** **     Parameters  :
 385:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 386:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 387:../Generated_Code/TU1.c **** **                           pointer returned by <Init> method.
 388:../Generated_Code/TU1.c **** **         ChannelIdx      - Index of the component
 389:../Generated_Code/TU1.c **** **                           channel.
 390:../Generated_Code/TU1.c **** **       * TicksPtr        - Pointer to return value of the
 391:../Generated_Code/TU1.c **** **                           number of counter ticks to compare match.
 392:../Generated_Code/TU1.c **** **     Returns     :
 393:../Generated_Code/TU1.c **** **         ---             - Error code, possible codes:
 394:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 395:../Generated_Code/TU1.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 396:../Generated_Code/TU1.c **** **                           out of possible range.
 397:../Generated_Code/TU1.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 398:../Generated_Code/TU1.c **** **                           selected for selected channel.
 399:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 400:../Generated_Code/TU1.c **** **                           the active clock configuration
 401:../Generated_Code/TU1.c **** ** ===================================================================
 402:../Generated_Code/TU1.c **** */
 403:../Generated_Code/TU1.c **** LDD_TError TU1_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU1_TValueType *T
 404:../Generated_Code/TU1.c **** {
 499              		.loc 1 404 0
 500              		.cfi_startproc
 501 0000 80B5     		push	{r7, lr}
 502              	.LCFI15:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 84B0     		sub	sp, sp, #16
 507              	.LCFI16:
 508              		.cfi_def_cfa_offset 24
 509 0004 00AF     		add	r7, sp, #0
 510              	.LCFI17:
 511              		.cfi_def_cfa_register 7
 512 0006 F860     		str	r0, [r7, #12]
 513 0008 7A60     		str	r2, [r7, #4]
 514 000a 3B1C     		mov	r3, r7
 515 000c 0B33     		add	r3, r3, #11
 516 000e 0A1C     		add	r2, r1, #0
 517 0010 1A70     		strb	r2, [r3]
 405:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 406:../Generated_Code/TU1.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 407:../Generated_Code/TU1.c ****      property to the "yes" value in the "Configuration inspector" */
 408:../Generated_Code/TU1.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 518              		.loc 1 408 0
 519 0012 3B1C     		mov	r3, r7
 520 0014 0B33     		add	r3, r3, #11
 521 0016 1B78     		ldrb	r3, [r3]
 522 0018 032B     		cmp	r3, #3
 523 001a 01D9     		bls	.L25
 409:../Generated_Code/TU1.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 524              		.loc 1 409 0
 525 001c 8223     		mov	r3, #130
 526 001e 16E0     		b	.L26
 527              	.L25:
 410:../Generated_Code/TU1.c ****   }
 411:../Generated_Code/TU1.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 528              		.loc 1 411 0
 529 0020 3B1C     		mov	r3, r7
 530 0022 0B33     		add	r3, r3, #11
 531 0024 1B78     		ldrb	r3, [r3]
 532 0026 0C4A     		ldr	r2, .L28
 533 0028 D35C     		ldrb	r3, [r2, r3]
 534 002a 002B     		cmp	r3, #0
 535 002c 01D0     		beq	.L27
 412:../Generated_Code/TU1.c ****     return ERR_NOTAVAIL;               /* If not then error */
 536              		.loc 1 412 0
 537 002e 0923     		mov	r3, #9
 538 0030 0DE0     		b	.L26
 539              	.L27:
 413:../Generated_Code/TU1.c ****   }
 414:../Generated_Code/TU1.c ****   *TicksPtr = (TU1_TValueType)(TPM_PDD_ReadChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx]
 540              		.loc 1 414 0
 541 0032 0A4A     		ldr	r2, .L28+4
 542 0034 3B1C     		mov	r3, r7
 543 0036 0B33     		add	r3, r3, #11
 544 0038 1B78     		ldrb	r3, [r3]
 545 003a 0949     		ldr	r1, .L28+8
 546 003c CB5C     		ldrb	r3, [r1, r3]
 547 003e 0133     		add	r3, r3, #1
 548 0040 DB00     		lsl	r3, r3, #3
 549 0042 D318     		add	r3, r2, r3
 550 0044 9B68     		ldr	r3, [r3, #8]
 551 0046 9AB2     		uxth	r2, r3
 552 0048 7B68     		ldr	r3, [r7, #4]
 553 004a 1A80     		strh	r2, [r3]
 415:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 554              		.loc 1 415 0
 555 004c 0023     		mov	r3, #0
 556              	.L26:
 416:../Generated_Code/TU1.c **** }
 557              		.loc 1 416 0
 558 004e 181C     		mov	r0, r3
 559 0050 BD46     		mov	sp, r7
 560 0052 04B0     		add	sp, sp, #16
 561              		@ sp needed for prologue
 562 0054 80BD     		pop	{r7, pc}
 563              	.L29:
 564 0056 C046     		.align	2
 565              	.L28:
 566 0058 00000000 		.word	ChannelMode
 567 005c 00800340 		.word	1073971200
 568 0060 00000000 		.word	ChannelDevice
 569              		.cfi_endproc
 570              	.LFE5:
 572              		.section	.text.TU1_SelectOutputAction,"ax",%progbits
 573              		.align	2
 574              		.global	TU1_SelectOutputAction
 575              		.code	16
 576              		.thumb_func
 578              	TU1_SelectOutputAction:
 579              	.LFB6:
 417:../Generated_Code/TU1.c **** 
 418:../Generated_Code/TU1.c **** /*
 419:../Generated_Code/TU1.c **** ** ===================================================================
 420:../Generated_Code/TU1.c **** **     Method      :  TU1_SelectOutputAction (component TimerUnit_LDD)
 421:../Generated_Code/TU1.c **** **
 422:../Generated_Code/TU1.c **** **     Description :
 423:../Generated_Code/TU1.c **** **         Sets the type of compare match and counter overflow action
 424:../Generated_Code/TU1.c **** **         on channel output. This method is available when at least
 425:../Generated_Code/TU1.c **** **         one channel is configured.
 426:../Generated_Code/TU1.c **** **     Parameters  :
 427:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 428:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 429:../Generated_Code/TU1.c **** **                           pointer returned by <Init> method.
 430:../Generated_Code/TU1.c **** **         ChannelIdx      - Index of the component
 431:../Generated_Code/TU1.c **** **                           channel.
 432:../Generated_Code/TU1.c **** **         CompareAction   - Select output action
 433:../Generated_Code/TU1.c **** **                           on compare match
 434:../Generated_Code/TU1.c **** **         CounterAction   - Select output action
 435:../Generated_Code/TU1.c **** **                           on counter overflow
 436:../Generated_Code/TU1.c **** **     Returns     :
 437:../Generated_Code/TU1.c **** **         ---             - Error code, possible codes:
 438:../Generated_Code/TU1.c **** **                           ERR_OK - OK
 439:../Generated_Code/TU1.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 440:../Generated_Code/TU1.c **** **                           out of possible range
 441:../Generated_Code/TU1.c **** **                           ERR_NOTAVAIL -  Action is not possible on
 442:../Generated_Code/TU1.c **** **                           selected channel or counter. Supported
 443:../Generated_Code/TU1.c **** **                           combinations are HW specific.
 444:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 445:../Generated_Code/TU1.c **** **                           the active clock configuration
 446:../Generated_Code/TU1.c **** ** ===================================================================
 447:../Generated_Code/TU1.c **** */
 448:../Generated_Code/TU1.c **** LDD_TError TU1_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUnit
 449:../Generated_Code/TU1.c **** {
 580              		.loc 1 449 0
 581              		.cfi_startproc
 582 0000 90B5     		push	{r4, r7, lr}
 583              	.LCFI18:
 584              		.cfi_def_cfa_offset 12
 585              		.cfi_offset 4, -12
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 83B0     		sub	sp, sp, #12
 589              	.LCFI19:
 590              		.cfi_def_cfa_offset 24
 591 0004 00AF     		add	r7, sp, #0
 592              	.LCFI20:
 593              		.cfi_def_cfa_register 7
 594 0006 7860     		str	r0, [r7, #4]
 595 0008 081C     		mov	r0, r1
 596 000a 111C     		mov	r1, r2
 597 000c 1A1C     		mov	r2, r3
 598 000e FB1C     		add	r3, r7, #3
 599 0010 1870     		strb	r0, [r3]
 600 0012 BB1C     		add	r3, r7, #2
 601 0014 1970     		strb	r1, [r3]
 602 0016 7B1C     		add	r3, r7, #1
 603 0018 1A70     		strb	r2, [r3]
 450:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 451:../Generated_Code/TU1.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 452:../Generated_Code/TU1.c ****      property to the "yes" value in the "Configuration inspector" */
 453:../Generated_Code/TU1.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 604              		.loc 1 453 0
 605 001a FB1C     		add	r3, r7, #3
 606 001c 1B78     		ldrb	r3, [r3]
 607 001e 032B     		cmp	r3, #3
 608 0020 01D9     		bls	.L31
 454:../Generated_Code/TU1.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 609              		.loc 1 454 0
 610 0022 8223     		mov	r3, #130
 611 0024 06E1     		b	.L32
 612              	.L31:
 455:../Generated_Code/TU1.c ****   }
 456:../Generated_Code/TU1.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 613              		.loc 1 456 0
 614 0026 FB1C     		add	r3, r7, #3
 615 0028 1B78     		ldrb	r3, [r3]
 616 002a 844A     		ldr	r2, .L49
 617 002c D35C     		ldrb	r3, [r2, r3]
 618 002e 002B     		cmp	r3, #0
 619 0030 01D0     		beq	.L33
 457:../Generated_Code/TU1.c ****     return ERR_NOTAVAIL;               /* If not then error */
 620              		.loc 1 457 0
 621 0032 0923     		mov	r3, #9
 622 0034 FEE0     		b	.L32
 623              	.L33:
 458:../Generated_Code/TU1.c ****   }
 459:../Generated_Code/TU1.c ****   switch (CounterAction) {
 624              		.loc 1 459 0
 625 0036 7B1C     		add	r3, r7, #1
 626 0038 1B78     		ldrb	r3, [r3]
 627 003a 022B     		cmp	r3, #2
 628 003c 00D1     		bne	.LCB472
 629 003e 8CE0     		b	.L36	@long jump
 630              	.LCB472:
 631 0040 032B     		cmp	r3, #3
 632 0042 00D1     		bne	.LCB474
 633 0044 BEE0     		b	.L37	@long jump
 634              	.LCB474:
 635 0046 002B     		cmp	r3, #0
 636 0048 00D0     		beq	.LCB476
 637 004a F0E0     		b	.L48	@long jump
 638              	.LCB476:
 639              	.L35:
 460:../Generated_Code/TU1.c ****     case OUTPUT_NONE:
 461:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_TOGGLE);
 640              		.loc 1 461 0
 641 004c 7C49     		ldr	r1, .L49+4
 642 004e FB1C     		add	r3, r7, #3
 643 0050 1B78     		ldrb	r3, [r3]
 644 0052 7C4A     		ldr	r2, .L49+8
 645 0054 D35C     		ldrb	r3, [r2, r3]
 646 0056 181C     		mov	r0, r3
 647 0058 794A     		ldr	r2, .L49+4
 648 005a FB1C     		add	r3, r7, #3
 649 005c 1B78     		ldrb	r3, [r3]
 650 005e 794C     		ldr	r4, .L49+8
 651 0060 E35C     		ldrb	r3, [r4, r3]
 652 0062 0133     		add	r3, r3, #1
 653 0064 DB00     		lsl	r3, r3, #3
 654 0066 D318     		add	r3, r2, r3
 655 0068 5B68     		ldr	r3, [r3, #4]
 656 006a B022     		mov	r2, #176
 657 006c 9343     		bic	r3, r2
 658 006e 1022     		mov	r2, #16
 659 0070 1A43     		orr	r2, r3
 660 0072 431C     		add	r3, r0, #1
 661 0074 DB00     		lsl	r3, r3, #3
 662 0076 CB18     		add	r3, r1, r3
 663 0078 5A60     		str	r2, [r3, #4]
 462:../Generated_Code/TU1.c ****       switch (CompareAction) {
 664              		.loc 1 462 0
 665 007a BB1C     		add	r3, r7, #2
 666 007c 1B78     		ldrb	r3, [r3]
 667 007e 012B     		cmp	r3, #1
 668 0080 20D0     		beq	.L40
 669 0082 02DC     		bgt	.L43
 670 0084 002B     		cmp	r3, #0
 671 0086 05D0     		beq	.L39
 672 0088 64E0     		b	.L38
 673              	.L43:
 674 008a 022B     		cmp	r3, #2
 675 008c 32D0     		beq	.L41
 676 008e 032B     		cmp	r3, #3
 677 0090 48D0     		beq	.L42
 678 0092 5FE0     		b	.L38
 679              	.L39:
 463:../Generated_Code/TU1.c ****         case OUTPUT_NONE:
 464:../Generated_Code/TU1.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_NON
 680              		.loc 1 464 0
 681 0094 6A49     		ldr	r1, .L49+4
 682 0096 FB1C     		add	r3, r7, #3
 683 0098 1B78     		ldrb	r3, [r3]
 684 009a 6A4A     		ldr	r2, .L49+8
 685 009c D35C     		ldrb	r3, [r2, r3]
 686 009e 181C     		mov	r0, r3
 687 00a0 674A     		ldr	r2, .L49+4
 688 00a2 FB1C     		add	r3, r7, #3
 689 00a4 1B78     		ldrb	r3, [r3]
 690 00a6 674C     		ldr	r4, .L49+8
 691 00a8 E35C     		ldrb	r3, [r4, r3]
 692 00aa 0133     		add	r3, r3, #1
 693 00ac DB00     		lsl	r3, r3, #3
 694 00ae D318     		add	r3, r2, r3
 695 00b0 5B68     		ldr	r3, [r3, #4]
 696 00b2 8C22     		mov	r2, #140
 697 00b4 1C1C     		mov	r4, r3
 698 00b6 9443     		bic	r4, r2
 699 00b8 221C     		mov	r2, r4
 700 00ba 431C     		add	r3, r0, #1
 701 00bc DB00     		lsl	r3, r3, #3
 702 00be CB18     		add	r3, r1, r3
 703 00c0 5A60     		str	r2, [r3, #4]
 465:../Generated_Code/TU1.c ****           break;
 704              		.loc 1 465 0
 705 00c2 49E0     		b	.L44
 706              	.L40:
 466:../Generated_Code/TU1.c ****         case OUTPUT_TOGGLE:
 467:../Generated_Code/TU1.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_RIS
 707              		.loc 1 467 0
 708 00c4 5E49     		ldr	r1, .L49+4
 709 00c6 FB1C     		add	r3, r7, #3
 710 00c8 1B78     		ldrb	r3, [r3]
 711 00ca 5E4A     		ldr	r2, .L49+8
 712 00cc D35C     		ldrb	r3, [r2, r3]
 713 00ce 181C     		mov	r0, r3
 714 00d0 5B4A     		ldr	r2, .L49+4
 715 00d2 FB1C     		add	r3, r7, #3
 716 00d4 1B78     		ldrb	r3, [r3]
 717 00d6 5B4C     		ldr	r4, .L49+8
 718 00d8 E35C     		ldrb	r3, [r4, r3]
 719 00da 0133     		add	r3, r3, #1
 720 00dc DB00     		lsl	r3, r3, #3
 721 00de D318     		add	r3, r2, r3
 722 00e0 5B68     		ldr	r3, [r3, #4]
 723 00e2 8C22     		mov	r2, #140
 724 00e4 9343     		bic	r3, r2
 725 00e6 0422     		mov	r2, #4
 726 00e8 1A43     		orr	r2, r3
 727 00ea 431C     		add	r3, r0, #1
 728 00ec DB00     		lsl	r3, r3, #3
 729 00ee CB18     		add	r3, r1, r3
 730 00f0 5A60     		str	r2, [r3, #4]
 468:../Generated_Code/TU1.c ****           break;
 731              		.loc 1 468 0
 732 00f2 31E0     		b	.L44
 733              	.L41:
 469:../Generated_Code/TU1.c ****         case OUTPUT_CLEAR:
 470:../Generated_Code/TU1.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FAL
 734              		.loc 1 470 0
 735 00f4 5249     		ldr	r1, .L49+4
 736 00f6 FB1C     		add	r3, r7, #3
 737 00f8 1B78     		ldrb	r3, [r3]
 738 00fa 524A     		ldr	r2, .L49+8
 739 00fc D35C     		ldrb	r3, [r2, r3]
 740 00fe 181C     		mov	r0, r3
 741 0100 4F4A     		ldr	r2, .L49+4
 742 0102 FB1C     		add	r3, r7, #3
 743 0104 1B78     		ldrb	r3, [r3]
 744 0106 4F4C     		ldr	r4, .L49+8
 745 0108 E35C     		ldrb	r3, [r4, r3]
 746 010a 0133     		add	r3, r3, #1
 747 010c DB00     		lsl	r3, r3, #3
 748 010e D318     		add	r3, r2, r3
 749 0110 5B68     		ldr	r3, [r3, #4]
 750 0112 8C22     		mov	r2, #140
 751 0114 9343     		bic	r3, r2
 752 0116 0822     		mov	r2, #8
 753 0118 1A43     		orr	r2, r3
 754 011a 431C     		add	r3, r0, #1
 755 011c DB00     		lsl	r3, r3, #3
 756 011e CB18     		add	r3, r1, r3
 757 0120 5A60     		str	r2, [r3, #4]
 471:../Generated_Code/TU1.c ****           break;
 758              		.loc 1 471 0
 759 0122 19E0     		b	.L44
 760              	.L42:
 472:../Generated_Code/TU1.c ****         case OUTPUT_SET:
 473:../Generated_Code/TU1.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOT
 761              		.loc 1 473 0
 762 0124 4649     		ldr	r1, .L49+4
 763 0126 FB1C     		add	r3, r7, #3
 764 0128 1B78     		ldrb	r3, [r3]
 765 012a 464A     		ldr	r2, .L49+8
 766 012c D35C     		ldrb	r3, [r2, r3]
 767 012e 181C     		mov	r0, r3
 768 0130 434A     		ldr	r2, .L49+4
 769 0132 FB1C     		add	r3, r7, #3
 770 0134 1B78     		ldrb	r3, [r3]
 771 0136 434C     		ldr	r4, .L49+8
 772 0138 E35C     		ldrb	r3, [r4, r3]
 773 013a 0133     		add	r3, r3, #1
 774 013c DB00     		lsl	r3, r3, #3
 775 013e D318     		add	r3, r2, r3
 776 0140 5B68     		ldr	r3, [r3, #4]
 777 0142 8C22     		mov	r2, #140
 778 0144 9343     		bic	r3, r2
 779 0146 0C22     		mov	r2, #12
 780 0148 1A43     		orr	r2, r3
 781 014a 431C     		add	r3, r0, #1
 782 014c DB00     		lsl	r3, r3, #3
 783 014e CB18     		add	r3, r1, r3
 784 0150 5A60     		str	r2, [r3, #4]
 474:../Generated_Code/TU1.c ****           break;
 785              		.loc 1 474 0
 786 0152 01E0     		b	.L44
 787              	.L38:
 475:../Generated_Code/TU1.c ****         default:
 476:../Generated_Code/TU1.c ****           return ERR_NOTAVAIL;
 788              		.loc 1 476 0
 789 0154 0923     		mov	r3, #9
 790 0156 6DE0     		b	.L32
 791              	.L44:
 477:../Generated_Code/TU1.c ****       }
 478:../Generated_Code/TU1.c ****       break;
 792              		.loc 1 478 0
 793 0158 6BE0     		b	.L45
 794              	.L36:
 479:../Generated_Code/TU1.c ****     case OUTPUT_CLEAR:
 480:../Generated_Code/TU1.c ****       if (CompareAction != OUTPUT_SET) {
 795              		.loc 1 480 0
 796 015a BB1C     		add	r3, r7, #2
 797 015c 1B78     		ldrb	r3, [r3]
 798 015e 032B     		cmp	r3, #3
 799 0160 01D0     		beq	.L46
 481:../Generated_Code/TU1.c ****         return ERR_NOTAVAIL;
 800              		.loc 1 481 0
 801 0162 0923     		mov	r3, #9
 802 0164 66E0     		b	.L32
 803              	.L46:
 482:../Generated_Code/TU1.c ****       }
 483:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_CLEAR);
 804              		.loc 1 483 0
 805 0166 3649     		ldr	r1, .L49+4
 806 0168 FB1C     		add	r3, r7, #3
 807 016a 1B78     		ldrb	r3, [r3]
 808 016c 354A     		ldr	r2, .L49+8
 809 016e D35C     		ldrb	r3, [r2, r3]
 810 0170 181C     		mov	r0, r3
 811 0172 334A     		ldr	r2, .L49+4
 812 0174 FB1C     		add	r3, r7, #3
 813 0176 1B78     		ldrb	r3, [r3]
 814 0178 324C     		ldr	r4, .L49+8
 815 017a E35C     		ldrb	r3, [r4, r3]
 816 017c 0133     		add	r3, r3, #1
 817 017e DB00     		lsl	r3, r3, #3
 818 0180 D318     		add	r3, r2, r3
 819 0182 5B68     		ldr	r3, [r3, #4]
 820 0184 B022     		mov	r2, #176
 821 0186 9343     		bic	r3, r2
 822 0188 2022     		mov	r2, #32
 823 018a 1A43     		orr	r2, r3
 824 018c 431C     		add	r3, r0, #1
 825 018e DB00     		lsl	r3, r3, #3
 826 0190 CB18     		add	r3, r1, r3
 827 0192 5A60     		str	r2, [r3, #4]
 484:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOTH);
 828              		.loc 1 484 0
 829 0194 2A49     		ldr	r1, .L49+4
 830 0196 FB1C     		add	r3, r7, #3
 831 0198 1B78     		ldrb	r3, [r3]
 832 019a 2A4A     		ldr	r2, .L49+8
 833 019c D35C     		ldrb	r3, [r2, r3]
 834 019e 181C     		mov	r0, r3
 835 01a0 274A     		ldr	r2, .L49+4
 836 01a2 FB1C     		add	r3, r7, #3
 837 01a4 1B78     		ldrb	r3, [r3]
 838 01a6 274C     		ldr	r4, .L49+8
 839 01a8 E35C     		ldrb	r3, [r4, r3]
 840 01aa 0133     		add	r3, r3, #1
 841 01ac DB00     		lsl	r3, r3, #3
 842 01ae D318     		add	r3, r2, r3
 843 01b0 5B68     		ldr	r3, [r3, #4]
 844 01b2 8C22     		mov	r2, #140
 845 01b4 9343     		bic	r3, r2
 846 01b6 0C22     		mov	r2, #12
 847 01b8 1A43     		orr	r2, r3
 848 01ba 431C     		add	r3, r0, #1
 849 01bc DB00     		lsl	r3, r3, #3
 850 01be CB18     		add	r3, r1, r3
 851 01c0 5A60     		str	r2, [r3, #4]
 485:../Generated_Code/TU1.c ****       break;
 852              		.loc 1 485 0
 853 01c2 36E0     		b	.L45
 854              	.L37:
 486:../Generated_Code/TU1.c ****     case OUTPUT_SET:
 487:../Generated_Code/TU1.c ****       if (CompareAction != OUTPUT_CLEAR) {
 855              		.loc 1 487 0
 856 01c4 BB1C     		add	r3, r7, #2
 857 01c6 1B78     		ldrb	r3, [r3]
 858 01c8 022B     		cmp	r3, #2
 859 01ca 01D0     		beq	.L47
 488:../Generated_Code/TU1.c ****         return ERR_NOTAVAIL;
 860              		.loc 1 488 0
 861 01cc 0923     		mov	r3, #9
 862 01ce 31E0     		b	.L32
 863              	.L47:
 489:../Generated_Code/TU1.c ****       }
 490:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_SET);
 864              		.loc 1 490 0
 865 01d0 1B49     		ldr	r1, .L49+4
 866 01d2 FB1C     		add	r3, r7, #3
 867 01d4 1B78     		ldrb	r3, [r3]
 868 01d6 1B4A     		ldr	r2, .L49+8
 869 01d8 D35C     		ldrb	r3, [r2, r3]
 870 01da 181C     		mov	r0, r3
 871 01dc 184A     		ldr	r2, .L49+4
 872 01de FB1C     		add	r3, r7, #3
 873 01e0 1B78     		ldrb	r3, [r3]
 874 01e2 184C     		ldr	r4, .L49+8
 875 01e4 E35C     		ldrb	r3, [r4, r3]
 876 01e6 0133     		add	r3, r3, #1
 877 01e8 DB00     		lsl	r3, r3, #3
 878 01ea D318     		add	r3, r2, r3
 879 01ec 5B68     		ldr	r3, [r3, #4]
 880 01ee B022     		mov	r2, #176
 881 01f0 9343     		bic	r3, r2
 882 01f2 3022     		mov	r2, #48
 883 01f4 1A43     		orr	r2, r3
 884 01f6 431C     		add	r3, r0, #1
 885 01f8 DB00     		lsl	r3, r3, #3
 886 01fa CB18     		add	r3, r1, r3
 887 01fc 5A60     		str	r2, [r3, #4]
 491:../Generated_Code/TU1.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FALLING
 888              		.loc 1 491 0
 889 01fe 1049     		ldr	r1, .L49+4
 890 0200 FB1C     		add	r3, r7, #3
 891 0202 1B78     		ldrb	r3, [r3]
 892 0204 0F4A     		ldr	r2, .L49+8
 893 0206 D35C     		ldrb	r3, [r2, r3]
 894 0208 181C     		mov	r0, r3
 895 020a 0D4A     		ldr	r2, .L49+4
 896 020c FB1C     		add	r3, r7, #3
 897 020e 1B78     		ldrb	r3, [r3]
 898 0210 0C4C     		ldr	r4, .L49+8
 899 0212 E35C     		ldrb	r3, [r4, r3]
 900 0214 0133     		add	r3, r3, #1
 901 0216 DB00     		lsl	r3, r3, #3
 902 0218 D318     		add	r3, r2, r3
 903 021a 5B68     		ldr	r3, [r3, #4]
 904 021c 8C22     		mov	r2, #140
 905 021e 9343     		bic	r3, r2
 906 0220 0822     		mov	r2, #8
 907 0222 1A43     		orr	r2, r3
 908 0224 431C     		add	r3, r0, #1
 909 0226 DB00     		lsl	r3, r3, #3
 910 0228 CB18     		add	r3, r1, r3
 911 022a 5A60     		str	r2, [r3, #4]
 492:../Generated_Code/TU1.c ****       break;
 912              		.loc 1 492 0
 913 022c 01E0     		b	.L45
 914              	.L48:
 493:../Generated_Code/TU1.c ****     default:
 494:../Generated_Code/TU1.c ****       return ERR_NOTAVAIL;
 915              		.loc 1 494 0
 916 022e 0923     		mov	r3, #9
 917 0230 00E0     		b	.L32
 918              	.L45:
 495:../Generated_Code/TU1.c ****   }
 496:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 919              		.loc 1 496 0
 920 0232 0023     		mov	r3, #0
 921              	.L32:
 497:../Generated_Code/TU1.c **** }
 922              		.loc 1 497 0
 923 0234 181C     		mov	r0, r3
 924 0236 BD46     		mov	sp, r7
 925 0238 03B0     		add	sp, sp, #12
 926              		@ sp needed for prologue
 927 023a 90BD     		pop	{r4, r7, pc}
 928              	.L50:
 929              		.align	2
 930              	.L49:
 931 023c 00000000 		.word	ChannelMode
 932 0240 00800340 		.word	1073971200
 933 0244 00000000 		.word	ChannelDevice
 934              		.cfi_endproc
 935              	.LFE6:
 937              		.text
 938              	.Letext0:
 939              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 940              		.file 3 "../Generated_Code/IO_Map.h"
 941              		.file 4 "../Generated_Code/PE_LDD.h"
 942              		.file 5 "../Generated_Code/TU1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU1.c
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:18     .rodata.ChannelDevice:00000000 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:21     .rodata.ChannelDevice:00000000 ChannelDevice
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:27     .rodata.ChannelMode:00000000 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:30     .rodata.ChannelMode:00000000 ChannelMode
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:33     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:36     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:39     .text.TU1_Init:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:44     .text.TU1_Init:00000000 TU1_Init
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:238    .text.TU1_Init:0000011c $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:252    .text.TU1_Deinit:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:257    .text.TU1_Deinit:00000000 TU1_Deinit
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:313    .text.TU1_Deinit:0000003c $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:319    .text.TU1_GetPeriodTicks:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:324    .text.TU1_GetPeriodTicks:00000000 TU1_GetPeriodTicks
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:372    .text.TU1_GetPeriodTicks:00000038 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:377    .text.TU1_GetCounterValue:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:382    .text.TU1_GetCounterValue:00000000 TU1_GetCounterValue
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:411    .text.TU1_GetCounterValue:00000018 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:416    .text.TU1_SetOffsetTicks:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:421    .text.TU1_SetOffsetTicks:00000000 TU1_SetOffsetTicks
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:485    .text.TU1_SetOffsetTicks:0000004c $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:492    .text.TU1_GetOffsetTicks:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:497    .text.TU1_GetOffsetTicks:00000000 TU1_GetOffsetTicks
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:566    .text.TU1_GetOffsetTicks:00000058 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:573    .text.TU1_SelectOutputAction:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:578    .text.TU1_SelectOutputAction:00000000 TU1_SelectOutputAction
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccpTgki6.s:931    .text.TU1_SelectOutputAction:0000023c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList

   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"WAIT1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WAIT1_Wait10Cycles,"ax",%progbits
  18              		.align	2
  19              		.global	WAIT1_Wait10Cycles
  20              		.code	16
  21              		.thumb_func
  23              	WAIT1_Wait10Cycles:
  24              	.LFB0:
  25              		.file 1 "../Generated_Code/WAIT1.c"
   1:../Generated_Code/WAIT1.c **** /** ###################################################################
   2:../Generated_Code/WAIT1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/WAIT1.c **** **     Filename    : WAIT1.c
   4:../Generated_Code/WAIT1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/WAIT1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/WAIT1.c **** **     Component   : Wait
   7:../Generated_Code/WAIT1.c **** **     Version     : Component 01.057, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/WAIT1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/WAIT1.c **** **     Date/Time   : 2013-05-10, 22:48, # CodeGen: 0
  10:../Generated_Code/WAIT1.c **** **     Abstract    :
  11:../Generated_Code/WAIT1.c **** **
  12:../Generated_Code/WAIT1.c **** **     Settings    :
  13:../Generated_Code/WAIT1.c **** **
  14:../Generated_Code/WAIT1.c **** **     Contents    :
  15:../Generated_Code/WAIT1.c **** **         Wait10Cycles  - void WAIT1_Wait10Cycles(void);
  16:../Generated_Code/WAIT1.c **** **         Wait100Cycles - void WAIT1_Wait100Cycles(void);
  17:../Generated_Code/WAIT1.c **** **         WaitCycles    - void WAIT1_WaitCycles(word cycles);
  18:../Generated_Code/WAIT1.c **** **         Waitms        - void WAIT1_Waitms(word ms);
  19:../Generated_Code/WAIT1.c **** **         Waitus        - void WAIT1_Waitus(word us);
  20:../Generated_Code/WAIT1.c **** **         Waitns        - void WAIT1_Waitns(word ns);
  21:../Generated_Code/WAIT1.c **** **         WaitOSms      - void WAIT1_WaitOSms(void);
  22:../Generated_Code/WAIT1.c **** **
  23:../Generated_Code/WAIT1.c **** **     License   :  Open Source (LGPL)
  24:../Generated_Code/WAIT1.c **** **     Copyright : (c) Copyright Erich Styger, 2012, all rights reserved.
  25:../Generated_Code/WAIT1.c **** **     This an open source software implementing waiting routines using Processor Expert.
  26:../Generated_Code/WAIT1.c **** **     This is a free software and is opened for education,  research  and commercial developments 
  27:../Generated_Code/WAIT1.c **** **     * This is a free software and there is NO WARRANTY.
  28:../Generated_Code/WAIT1.c **** **     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or
  29:../Generated_Code/WAIT1.c **** **     * Redistributions of source code must retain the above copyright notice.
  30:../Generated_Code/WAIT1.c **** ** ###################################################################*/
  31:../Generated_Code/WAIT1.c **** 
  32:../Generated_Code/WAIT1.c **** /* MODULE WAIT1. */
  33:../Generated_Code/WAIT1.c **** 
  34:../Generated_Code/WAIT1.c **** #include "WAIT1.h"
  35:../Generated_Code/WAIT1.c **** 
  36:../Generated_Code/WAIT1.c **** /* tell the compiler not to inline functions in this module, as they are timing critical */
  37:../Generated_Code/WAIT1.c **** 
  38:../Generated_Code/WAIT1.c **** /*
  39:../Generated_Code/WAIT1.c **** ** ===================================================================
  40:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Wait10Cycles (component Wait)
  41:../Generated_Code/WAIT1.c **** **
  42:../Generated_Code/WAIT1.c **** **     Description :
  43:../Generated_Code/WAIT1.c **** **         Wait for approximately 10 CPU cycles.
  44:../Generated_Code/WAIT1.c **** **     Parameters  : None
  45:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
  46:../Generated_Code/WAIT1.c **** ** ===================================================================
  47:../Generated_Code/WAIT1.c **** */
  48:../Generated_Code/WAIT1.c **** void WAIT1_Wait10Cycles(void)
  49:../Generated_Code/WAIT1.c **** {
  26              		.loc 1 49 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
  50:../Generated_Code/WAIT1.c ****   /* This function will wait 10 CPU cycles (including call overhead). */
  51:../Generated_Code/WAIT1.c ****   /* NOTE: this is not really accurate, as not sure yet about the cycle counts. Assuming 1 cycle fo
  52:../Generated_Code/WAIT1.c ****   asm(
  36              		.loc 1 52 0
  37              	@ 52 "../Generated_Code/WAIT1.c" 1
  38 0004 C046     		nop 
  39 0006 C046     		nop 
  40 0008 C046     		nop 
  41 000a C046     		nop 
  42 000c C046     		nop 
  43 000e C046     		nop 
  44 0010 C046     		nop 
  45 0012 C046     		nop 
  46 0014 C046     		nop 
  47 0016 C046     		nop 
  48              		
  49              	@ 0 "" 2
  53:../Generated_Code/WAIT1.c ****    "nop \n\t"
  54:../Generated_Code/WAIT1.c ****    "nop \n\t"
  55:../Generated_Code/WAIT1.c ****    "nop \n\t"
  56:../Generated_Code/WAIT1.c ****    "nop \n\t"
  57:../Generated_Code/WAIT1.c ****    "nop \n\t"
  58:../Generated_Code/WAIT1.c ****    "nop \n\t"
  59:../Generated_Code/WAIT1.c ****    "nop \n\t"
  60:../Generated_Code/WAIT1.c ****    "nop \n\t"
  61:../Generated_Code/WAIT1.c ****    "nop \n\t"
  62:../Generated_Code/WAIT1.c ****    "nop \n\t"
  63:../Generated_Code/WAIT1.c ****   );
  64:../Generated_Code/WAIT1.c **** }
  50              		.loc 1 64 0
  51              		.code	16
  52 0018 BD46     		mov	sp, r7
  53              		@ sp needed for prologue
  54 001a 80BD     		pop	{r7, pc}
  55              		.cfi_endproc
  56              	.LFE0:
  58              		.section	.text.WAIT1_Wait100Cycles,"ax",%progbits
  59              		.align	2
  60              		.global	WAIT1_Wait100Cycles
  61              		.code	16
  62              		.thumb_func
  64              	WAIT1_Wait100Cycles:
  65              	.LFB1:
  65:../Generated_Code/WAIT1.c **** 
  66:../Generated_Code/WAIT1.c **** /*
  67:../Generated_Code/WAIT1.c **** ** ===================================================================
  68:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Wait100Cycles (component Wait)
  69:../Generated_Code/WAIT1.c **** **
  70:../Generated_Code/WAIT1.c **** **     Description :
  71:../Generated_Code/WAIT1.c **** **         Wait for 100 CPU cycles.
  72:../Generated_Code/WAIT1.c **** **     Parameters  : None
  73:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
  74:../Generated_Code/WAIT1.c **** ** ===================================================================
  75:../Generated_Code/WAIT1.c **** */
  76:../Generated_Code/WAIT1.c **** void WAIT1_Wait100Cycles(void)
  77:../Generated_Code/WAIT1.c **** {
  66              		.loc 1 77 0
  67              		.cfi_startproc
  68 0000 80B5     		push	{r7, lr}
  69              	.LCFI2:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0002 82B0     		sub	sp, sp, #8
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              	.LCFI4:
  78              		.cfi_def_cfa_register 7
  78:../Generated_Code/WAIT1.c ****   /* This function will spend 100 CPU cycles (including call overhead). */
  79:../Generated_Code/WAIT1.c ****   volatile byte i;
  80:../Generated_Code/WAIT1.c ****   for(i=0; i<133; i++) {
  79              		.loc 1 80 0
  80 0006 FB1D     		add	r3, r7, #7
  81 0008 0022     		mov	r2, #0
  82 000a 1A70     		strb	r2, [r3]
  83 000c 07E0     		b	.L3
  84              	.L4:
  81:../Generated_Code/WAIT1.c ****     /* NOTE: this is not really accurate, as not sure yet about the cycle counts. Assuming 0.75 cyc
  82:../Generated_Code/WAIT1.c ****     asm(
  85              		.loc 1 82 0 discriminator 2
  86              	@ 82 "../Generated_Code/WAIT1.c" 1
  87 000e C046     		nop 
  88              		
  89              	@ 0 "" 2
  80:../Generated_Code/WAIT1.c ****   for(i=0; i<133; i++) {
  90              		.loc 1 80 0 discriminator 2
  91              		.code	16
  92 0010 FB1D     		add	r3, r7, #7
  93 0012 1B78     		ldrb	r3, [r3]
  94 0014 DBB2     		uxtb	r3, r3
  95 0016 0133     		add	r3, r3, #1
  96 0018 DAB2     		uxtb	r2, r3
  97 001a FB1D     		add	r3, r7, #7
  98 001c 1A70     		strb	r2, [r3]
  99              	.L3:
  80:../Generated_Code/WAIT1.c ****   for(i=0; i<133; i++) {
 100              		.loc 1 80 0 is_stmt 0 discriminator 1
 101 001e FB1D     		add	r3, r7, #7
 102 0020 1B78     		ldrb	r3, [r3]
 103 0022 DBB2     		uxtb	r3, r3
 104 0024 842B     		cmp	r3, #132
 105 0026 F2D9     		bls	.L4
  83:../Generated_Code/WAIT1.c ****      "nop \n\t"
  84:../Generated_Code/WAIT1.c ****     );
  85:../Generated_Code/WAIT1.c ****   } /* just something to wait, NOT the requested 100 cycles */
  86:../Generated_Code/WAIT1.c **** }
 106              		.loc 1 86 0 is_stmt 1
 107 0028 BD46     		mov	sp, r7
 108 002a 02B0     		add	sp, sp, #8
 109              		@ sp needed for prologue
 110 002c 80BD     		pop	{r7, pc}
 111              		.cfi_endproc
 112              	.LFE1:
 114 002e C046     		.section	.text.WAIT1_WaitCycles,"ax",%progbits
 115              		.align	2
 116              		.global	WAIT1_WaitCycles
 117              		.code	16
 118              		.thumb_func
 120              	WAIT1_WaitCycles:
 121              	.LFB2:
  87:../Generated_Code/WAIT1.c **** /*
  88:../Generated_Code/WAIT1.c **** ** ===================================================================
  89:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitCycles (component Wait)
  90:../Generated_Code/WAIT1.c **** **
  91:../Generated_Code/WAIT1.c **** **     Description :
  92:../Generated_Code/WAIT1.c **** **         Wait for 100 CPU cycles.
  93:../Generated_Code/WAIT1.c **** **     Parameters  :
  94:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
  95:../Generated_Code/WAIT1.c **** **         cycles          - The number of cycles to wait.
  96:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
  97:../Generated_Code/WAIT1.c **** ** ===================================================================
  98:../Generated_Code/WAIT1.c **** */
  99:../Generated_Code/WAIT1.c **** void WAIT1_WaitCycles(word cycles)
 100:../Generated_Code/WAIT1.c **** {
 122              		.loc 1 100 0
 123              		.cfi_startproc
 124 0000 80B5     		push	{r7, lr}
 125              	.LCFI5:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 82B0     		sub	sp, sp, #8
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              	.LCFI7:
 134              		.cfi_def_cfa_register 7
 135 0006 021C     		mov	r2, r0
 136 0008 BB1D     		add	r3, r7, #6
 137 000a 1A80     		strh	r2, [r3]
 101:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 138              		.loc 1 101 0
 139 000c 06E0     		b	.L6
 140              	.L7:
 102:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 141              		.loc 1 102 0
 142 000e FFF7FEFF 		bl	WAIT1_Wait100Cycles
 103:../Generated_Code/WAIT1.c ****     cycles -= 100;
 143              		.loc 1 103 0
 144 0012 BB1D     		add	r3, r7, #6
 145 0014 BA1D     		add	r2, r7, #6
 146 0016 1288     		ldrh	r2, [r2]
 147 0018 643A     		sub	r2, r2, #100
 148 001a 1A80     		strh	r2, [r3]
 149              	.L6:
 101:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 150              		.loc 1 101 0 discriminator 1
 151 001c BB1D     		add	r3, r7, #6
 152 001e 1B88     		ldrh	r3, [r3]
 153 0020 642B     		cmp	r3, #100
 154 0022 F4D8     		bhi	.L7
 104:../Generated_Code/WAIT1.c ****   }
 105:../Generated_Code/WAIT1.c **** }
 155              		.loc 1 105 0
 156 0024 BD46     		mov	sp, r7
 157 0026 02B0     		add	sp, sp, #8
 158              		@ sp needed for prologue
 159 0028 80BD     		pop	{r7, pc}
 160              		.cfi_endproc
 161              	.LFE2:
 163 002a C046     		.section	.text.WAIT1_Waitms,"ax",%progbits
 164              		.align	2
 165              		.global	WAIT1_Waitms
 166              		.code	16
 167              		.thumb_func
 169              	WAIT1_Waitms:
 170              	.LFB3:
 106:../Generated_Code/WAIT1.c **** 
 107:../Generated_Code/WAIT1.c **** /*
 108:../Generated_Code/WAIT1.c **** ** ===================================================================
 109:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitms (component Wait)
 110:../Generated_Code/WAIT1.c **** **
 111:../Generated_Code/WAIT1.c **** **     Description :
 112:../Generated_Code/WAIT1.c **** **         Wait for a specified time in milliseconds.
 113:../Generated_Code/WAIT1.c **** **     Parameters  :
 114:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 115:../Generated_Code/WAIT1.c **** **         ms              - How many milliseconds the function has to
 116:../Generated_Code/WAIT1.c **** **                           wait
 117:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 118:../Generated_Code/WAIT1.c **** ** ===================================================================
 119:../Generated_Code/WAIT1.c **** */
 120:../Generated_Code/WAIT1.c **** void WAIT1_Waitms(word ms)
 121:../Generated_Code/WAIT1.c **** {
 171              		.loc 1 121 0
 172              		.cfi_startproc
 173 0000 80B5     		push	{r7, lr}
 174              	.LCFI8:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 82B0     		sub	sp, sp, #8
 179              	.LCFI9:
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              	.LCFI10:
 183              		.cfi_def_cfa_register 7
 184 0006 021C     		mov	r2, r0
 185 0008 BB1D     		add	r3, r7, #6
 186 000a 1A80     		strh	r2, [r3]
 122:../Generated_Code/WAIT1.c ****   /* we do not have Cpu_Delay100US() for Kinetis: using a different (not exact) method */
 123:../Generated_Code/WAIT1.c ****   while (ms>0) {
 187              		.loc 1 123 0
 188 000c 09E0     		b	.L9
 189              	.L10:
 124:../Generated_Code/WAIT1.c ****     WAIT1_WaitCycles(1000);
 190              		.loc 1 124 0
 191 000e FA23     		mov	r3, #250
 192 0010 9B00     		lsl	r3, r3, #2
 193 0012 181C     		mov	r0, r3
 194 0014 FFF7FEFF 		bl	WAIT1_WaitCycles
 125:../Generated_Code/WAIT1.c ****     ms--;
 195              		.loc 1 125 0
 196 0018 BB1D     		add	r3, r7, #6
 197 001a BA1D     		add	r2, r7, #6
 198 001c 1288     		ldrh	r2, [r2]
 199 001e 013A     		sub	r2, r2, #1
 200 0020 1A80     		strh	r2, [r3]
 201              	.L9:
 123:../Generated_Code/WAIT1.c ****   while (ms>0) {
 202              		.loc 1 123 0 discriminator 1
 203 0022 BB1D     		add	r3, r7, #6
 204 0024 1B88     		ldrh	r3, [r3]
 205 0026 002B     		cmp	r3, #0
 206 0028 F1D1     		bne	.L10
 126:../Generated_Code/WAIT1.c ****   }
 127:../Generated_Code/WAIT1.c **** }
 207              		.loc 1 127 0
 208 002a BD46     		mov	sp, r7
 209 002c 02B0     		add	sp, sp, #8
 210              		@ sp needed for prologue
 211 002e 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE3:
 215              		.text
 216              	.Letext0:
 217              		.file 2 "../Generated_Code/PE_Types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 WAIT1.c
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxFeQ0v.s:18     .text.WAIT1_Wait10Cycles:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxFeQ0v.s:23     .text.WAIT1_Wait10Cycles:00000000 WAIT1_Wait10Cycles
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxFeQ0v.s:59     .text.WAIT1_Wait100Cycles:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxFeQ0v.s:64     .text.WAIT1_Wait100Cycles:00000000 WAIT1_Wait100Cycles
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxFeQ0v.s:115    .text.WAIT1_WaitCycles:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxFeQ0v.s:120    .text.WAIT1_WaitCycles:00000000 WAIT1_WaitCycles
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxFeQ0v.s:164    .text.WAIT1_Waitms:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxFeQ0v.s:169    .text.WAIT1_Waitms:00000000 WAIT1_Waitms
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS

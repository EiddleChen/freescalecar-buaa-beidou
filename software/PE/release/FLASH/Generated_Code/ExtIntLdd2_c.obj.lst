   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ExtIntLdd2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	4
  23              		.section	.bss.INT_PORTA__DEFAULT_RTOS_ISRPARAM,"aw",%nobits
  24              		.align	2
  27              	INT_PORTA__DEFAULT_RTOS_ISRPARAM:
  28 0000 00000000 		.space	4
  29              		.section	.text.ExtIntLdd2_Init,"ax",%progbits
  30              		.align	2
  31              		.global	ExtIntLdd2_Init
  32              		.code	16
  33              		.thumb_func
  35              	ExtIntLdd2_Init:
  36              	.LFB0:
  37              		.file 1 "../Generated_Code/ExtIntLdd2.c"
   1:../Generated_Code/ExtIntLdd2.c **** /** ###################################################################
   2:../Generated_Code/ExtIntLdd2.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/ExtIntLdd2.c **** **     Filename    : ExtIntLdd2.c
   4:../Generated_Code/ExtIntLdd2.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/ExtIntLdd2.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/ExtIntLdd2.c **** **     Component   : ExtInt_LDD
   7:../Generated_Code/ExtIntLdd2.c **** **     Version     : Component 02.151, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/ExtIntLdd2.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/ExtIntLdd2.c **** **     Date/Time   : 2013-05-10, 22:48, # CodeGen: 0
  10:../Generated_Code/ExtIntLdd2.c **** **     Abstract    :
  11:../Generated_Code/ExtIntLdd2.c **** **         This component, "ExtInt_LDD", provide a low level API 
  12:../Generated_Code/ExtIntLdd2.c **** **         for unified access of external interrupts handling
  13:../Generated_Code/ExtIntLdd2.c **** **         across various device designs.
  14:../Generated_Code/ExtIntLdd2.c **** **         The component uses one pin which generates interrupt on 
  15:../Generated_Code/ExtIntLdd2.c **** **         selected edge.
  16:../Generated_Code/ExtIntLdd2.c **** **     Settings    :
  17:../Generated_Code/ExtIntLdd2.c **** **          Component name                                 : ExtIntLdd2
  18:../Generated_Code/ExtIntLdd2.c **** **          Pin                                            : PTA13/TPM1_CH1
  19:../Generated_Code/ExtIntLdd2.c **** **          Pin signal                                     : 
  20:../Generated_Code/ExtIntLdd2.c **** **          Generate interrupt on                          : falling edge
  21:../Generated_Code/ExtIntLdd2.c **** **          Interrupt                                      : INT_PORTA
  22:../Generated_Code/ExtIntLdd2.c **** **          Interrupt priority                             : maximal priority
  23:../Generated_Code/ExtIntLdd2.c **** **          Initialization                                 : 
  24:../Generated_Code/ExtIntLdd2.c **** **            Enabled in init. code                        : yes
  25:../Generated_Code/ExtIntLdd2.c **** **            Auto initialization                          : yes
  26:../Generated_Code/ExtIntLdd2.c **** **            Event mask                                   : 
  27:../Generated_Code/ExtIntLdd2.c **** **              OnInterrupt                                : Enabled
  28:../Generated_Code/ExtIntLdd2.c **** **          Threshold level                                : 0
  29:../Generated_Code/ExtIntLdd2.c **** **     Contents    :
  30:../Generated_Code/ExtIntLdd2.c **** **         Init   - LDD_TDeviceData* ExtIntLdd2_Init(LDD_TUserData *UserDataPtr);
  31:../Generated_Code/ExtIntLdd2.c **** **         GetVal - bool ExtIntLdd2_GetVal(LDD_TDeviceData *DeviceDataPtr);
  32:../Generated_Code/ExtIntLdd2.c **** **
  33:../Generated_Code/ExtIntLdd2.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  34:../Generated_Code/ExtIntLdd2.c **** **     
  35:../Generated_Code/ExtIntLdd2.c **** **     http      : www.freescale.com
  36:../Generated_Code/ExtIntLdd2.c **** **     mail      : support@freescale.com
  37:../Generated_Code/ExtIntLdd2.c **** ** ###################################################################*/
  38:../Generated_Code/ExtIntLdd2.c **** 
  39:../Generated_Code/ExtIntLdd2.c **** /* MODULE ExtIntLdd2. */
  40:../Generated_Code/ExtIntLdd2.c **** 
  41:../Generated_Code/ExtIntLdd2.c **** #include "EInt2.h"
  42:../Generated_Code/ExtIntLdd2.c **** #include "ExtIntLdd2.h"
  43:../Generated_Code/ExtIntLdd2.c **** /* {Default RTOS Adapter} No RTOS includes */
  44:../Generated_Code/ExtIntLdd2.c **** #include "IO_Map.h"
  45:../Generated_Code/ExtIntLdd2.c **** 
  46:../Generated_Code/ExtIntLdd2.c **** 
  47:../Generated_Code/ExtIntLdd2.c **** typedef struct {
  48:../Generated_Code/ExtIntLdd2.c ****   LDD_TUserData *UserData;             /* RTOS device data structure */
  49:../Generated_Code/ExtIntLdd2.c **** } ExtIntLdd2_TDeviceData, *ExtIntLdd2_TDeviceDataPtr; /* Device data structure type */
  50:../Generated_Code/ExtIntLdd2.c **** 
  51:../Generated_Code/ExtIntLdd2.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  52:../Generated_Code/ExtIntLdd2.c **** static ExtIntLdd2_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  53:../Generated_Code/ExtIntLdd2.c **** /* {Default RTOS Adapter} Global variable used for passing a parameter into ISR */
  54:../Generated_Code/ExtIntLdd2.c **** static ExtIntLdd2_TDeviceData * INT_PORTA__DEFAULT_RTOS_ISRPARAM;
  55:../Generated_Code/ExtIntLdd2.c **** 
  56:../Generated_Code/ExtIntLdd2.c **** /*
  57:../Generated_Code/ExtIntLdd2.c **** ** ===================================================================
  58:../Generated_Code/ExtIntLdd2.c **** **     Method      :  ExtIntLdd2_Init (component ExtInt_LDD)
  59:../Generated_Code/ExtIntLdd2.c **** **
  60:../Generated_Code/ExtIntLdd2.c **** **     Description :
  61:../Generated_Code/ExtIntLdd2.c **** **         This method initializes the associated peripheral(s) and the
  62:../Generated_Code/ExtIntLdd2.c **** **         component internal variables. The method is called
  63:../Generated_Code/ExtIntLdd2.c **** **         automatically as a part of the application initialization
  64:../Generated_Code/ExtIntLdd2.c **** **         code.
  65:../Generated_Code/ExtIntLdd2.c **** **     Parameters  :
  66:../Generated_Code/ExtIntLdd2.c **** **         NAME            - DESCRIPTION
  67:../Generated_Code/ExtIntLdd2.c **** **       * UserDataPtr     - Pointer to the RTOS device
  68:../Generated_Code/ExtIntLdd2.c **** **                           structure. This pointer will be passed to
  69:../Generated_Code/ExtIntLdd2.c **** **                           all events as parameter.
  70:../Generated_Code/ExtIntLdd2.c **** **     Returns     :
  71:../Generated_Code/ExtIntLdd2.c **** **         ---             - Pointer to the dynamically allocated
  72:../Generated_Code/ExtIntLdd2.c **** **                           private structure or NULL if there was an
  73:../Generated_Code/ExtIntLdd2.c **** **                           error.
  74:../Generated_Code/ExtIntLdd2.c **** ** ===================================================================
  75:../Generated_Code/ExtIntLdd2.c **** */
  76:../Generated_Code/ExtIntLdd2.c **** LDD_TDeviceData* ExtIntLdd2_Init(LDD_TUserData *UserDataPtr)
  77:../Generated_Code/ExtIntLdd2.c **** {
  38              		.loc 1 77 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 84B0     		sub	sp, sp, #16
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  78:../Generated_Code/ExtIntLdd2.c ****   /* Allocate LDD device structure */
  79:../Generated_Code/ExtIntLdd2.c ****   ExtIntLdd2_TDeviceData *DeviceDataPrv;
  80:../Generated_Code/ExtIntLdd2.c **** 
  81:../Generated_Code/ExtIntLdd2.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
  82:../Generated_Code/ExtIntLdd2.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  52              		.loc 1 82 0
  53 0008 174B     		ldr	r3, .L2
  54 000a FB60     		str	r3, [r7, #12]
  83:../Generated_Code/ExtIntLdd2.c ****   /* Store the UserData pointer */
  84:../Generated_Code/ExtIntLdd2.c ****   DeviceDataPrv->UserData = UserDataPtr;
  55              		.loc 1 84 0
  56 000c FB68     		ldr	r3, [r7, #12]
  57 000e 7A68     		ldr	r2, [r7, #4]
  58 0010 1A60     		str	r2, [r3]
  85:../Generated_Code/ExtIntLdd2.c ****   /* Interrupt vector(s) allocation */
  86:../Generated_Code/ExtIntLdd2.c ****   /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the glo
  87:../Generated_Code/ExtIntLdd2.c ****   INT_PORTA__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
  59              		.loc 1 87 0
  60 0012 164B     		ldr	r3, .L2+4
  61 0014 FA68     		ldr	r2, [r7, #12]
  62 0016 1A60     		str	r2, [r3]
  88:../Generated_Code/ExtIntLdd2.c ****   /* Clear interrupt status flag - w1c */
  89:../Generated_Code/ExtIntLdd2.c ****   PORTA_ISFR = PORT_ISFR_ISF(0x2000);                                                   
  63              		.loc 1 89 0
  64 0018 154A     		ldr	r2, .L2+8
  65 001a A023     		mov	r3, #160
  66 001c 8021     		mov	r1, #128
  67 001e 8901     		lsl	r1, r1, #6
  68 0020 D150     		str	r1, [r2, r3]
  90:../Generated_Code/ExtIntLdd2.c ****   /* Initialization of Port Control registers */
  91:../Generated_Code/ExtIntLdd2.c ****   /* PORTA_PCR13: ISF=0,IRQC=0x0A,MUX=1 */
  92:../Generated_Code/ExtIntLdd2.c ****   PORTA_PCR13 = (uint32_t)((PORTA_PCR13 & (uint32_t)~(uint32_t)(
  69              		.loc 1 92 0
  70 0022 134B     		ldr	r3, .L2+8
  71 0024 124A     		ldr	r2, .L2+8
  72 0026 526B     		ldr	r2, [r2, #52]
  73 0028 111C     		mov	r1, r2
  74 002a 124A     		ldr	r2, .L2+12
  75 002c 0A40     		and	r2, r1
  76 002e 1249     		ldr	r1, .L2+16
  77 0030 0A43     		orr	r2, r1
  78 0032 5A63     		str	r2, [r3, #52]
  93:../Generated_Code/ExtIntLdd2.c ****                  PORT_PCR_ISF_MASK |
  94:../Generated_Code/ExtIntLdd2.c ****                  PORT_PCR_IRQC(0x05) |
  95:../Generated_Code/ExtIntLdd2.c ****                  PORT_PCR_MUX(0x06)
  96:../Generated_Code/ExtIntLdd2.c ****                 )) | (uint32_t)(
  97:../Generated_Code/ExtIntLdd2.c ****                  PORT_PCR_IRQC(0x0A) |
  98:../Generated_Code/ExtIntLdd2.c ****                  PORT_PCR_MUX(0x01)
  99:../Generated_Code/ExtIntLdd2.c ****                 ));                                                  
 100:../Generated_Code/ExtIntLdd2.c ****   /* NVIC_IPR7: PRI_30=0 */
 101:../Generated_Code/ExtIntLdd2.c ****   NVIC_IPR7 &= (uint32_t)~(uint32_t)(NVIC_IP_PRI_30(0xFF));                                        
  79              		.loc 1 101 0
  80 0034 114A     		ldr	r2, .L2+20
  81 0036 1149     		ldr	r1, .L2+20
  82 0038 C723     		mov	r3, #199
  83 003a 9B00     		lsl	r3, r3, #2
  84 003c CB58     		ldr	r3, [r1, r3]
  85 003e 191C     		mov	r1, r3
  86 0040 0F4B     		ldr	r3, .L2+24
  87 0042 1940     		and	r1, r3
  88 0044 C723     		mov	r3, #199
  89 0046 9B00     		lsl	r3, r3, #2
  90 0048 D150     		str	r1, [r2, r3]
 102:../Generated_Code/ExtIntLdd2.c ****   /* NVIC_ISER: SETENA|=0x40000000 */
 103:../Generated_Code/ExtIntLdd2.c ****   NVIC_ISER |= NVIC_ISER_SETENA(0x40000000);                                                   
  91              		.loc 1 103 0
  92 004a 0C4B     		ldr	r3, .L2+20
  93 004c 0B4A     		ldr	r2, .L2+20
  94 004e 1268     		ldr	r2, [r2]
  95 0050 8021     		mov	r1, #128
  96 0052 C905     		lsl	r1, r1, #23
  97 0054 0A43     		orr	r2, r1
  98 0056 1A60     		str	r2, [r3]
 104:../Generated_Code/ExtIntLdd2.c ****   /* Registration of the device structure */
 105:../Generated_Code/ExtIntLdd2.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_ExtIntLdd2_ID,DeviceDataPrv);
  99              		.loc 1 105 0
 100 0058 0A4B     		ldr	r3, .L2+28
 101 005a FA68     		ldr	r2, [r7, #12]
 102 005c DA62     		str	r2, [r3, #44]
 106:../Generated_Code/ExtIntLdd2.c ****   return ((LDD_TDeviceData *)DeviceDataPrv);
 103              		.loc 1 106 0
 104 005e FB68     		ldr	r3, [r7, #12]
 107:../Generated_Code/ExtIntLdd2.c **** }
 105              		.loc 1 107 0
 106 0060 181C     		mov	r0, r3
 107 0062 BD46     		mov	sp, r7
 108 0064 04B0     		add	sp, sp, #16
 109              		@ sp needed for prologue
 110 0066 80BD     		pop	{r7, pc}
 111              	.L3:
 112              		.align	2
 113              	.L2:
 114 0068 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 115 006c 00000000 		.word	INT_PORTA__DEFAULT_RTOS_ISRPARAM
 116 0070 00900440 		.word	1074040832
 117 0074 FFF8F0FE 		.word	-17762049
 118 0078 00010A00 		.word	655616
 119 007c 00E100E0 		.word	-536813312
 120 0080 FFFF00FF 		.word	-16711681
 121 0084 00000000 		.word	PE_LDD_DeviceDataList
 122              		.cfi_endproc
 123              	.LFE0:
 125              		.section	.text.ExtIntLdd2_Interrupt,"ax",%progbits
 126              		.align	2
 127              		.global	ExtIntLdd2_Interrupt
 128              		.code	16
 129              		.thumb_func
 131              	ExtIntLdd2_Interrupt:
 132              	.LFB1:
 108:../Generated_Code/ExtIntLdd2.c **** 
 109:../Generated_Code/ExtIntLdd2.c **** /*
 110:../Generated_Code/ExtIntLdd2.c **** ** ===================================================================
 111:../Generated_Code/ExtIntLdd2.c **** **     Method      :  ExtIntLdd2_Interrupt (component ExtInt_LDD)
 112:../Generated_Code/ExtIntLdd2.c **** **
 113:../Generated_Code/ExtIntLdd2.c **** **     Description :
 114:../Generated_Code/ExtIntLdd2.c **** **         The method services the interrupt of the selected peripheral(s)
 115:../Generated_Code/ExtIntLdd2.c **** **         and eventually invokes event(s) of the component.
 116:../Generated_Code/ExtIntLdd2.c **** **         This method is internal. It is used by Processor Expert only.
 117:../Generated_Code/ExtIntLdd2.c **** ** ===================================================================
 118:../Generated_Code/ExtIntLdd2.c **** */
 119:../Generated_Code/ExtIntLdd2.c **** void ExtIntLdd2_Interrupt(void)
 120:../Generated_Code/ExtIntLdd2.c **** {
 133              		.loc 1 120 0
 134              		.cfi_startproc
 135 0000 80B5     		push	{r7, lr}
 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 82B0     		sub	sp, sp, #8
 141              	.LCFI4:
 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              	.LCFI5:
 145              		.cfi_def_cfa_register 7
 121:../Generated_Code/ExtIntLdd2.c ****   /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
 122:../Generated_Code/ExtIntLdd2.c ****   ExtIntLdd2_TDeviceDataPtr DeviceDataPrv = INT_PORTA__DEFAULT_RTOS_ISRPARAM;
 146              		.loc 1 122 0
 147 0006 0C4B     		ldr	r3, .L6
 148 0008 1B68     		ldr	r3, [r3]
 149 000a 7B60     		str	r3, [r7, #4]
 123:../Generated_Code/ExtIntLdd2.c **** 
 124:../Generated_Code/ExtIntLdd2.c ****   /* Check the pin interrupt flag of the shared interrupt */
 125:../Generated_Code/ExtIntLdd2.c ****   if (PORT_PDD_GetPinInterruptFlag(ExtIntLdd2_PORTCONTROL_BASE_ADDRESS, ExtIntLdd2_PIN_INDEX)) {
 150              		.loc 1 125 0
 151 000c 0B4B     		ldr	r3, .L6+4
 152 000e 5B6B     		ldr	r3, [r3, #52]
 153 0010 1A1C     		mov	r2, r3
 154 0012 8023     		mov	r3, #128
 155 0014 5B04     		lsl	r3, r3, #17
 156 0016 1340     		and	r3, r2
 157 0018 0BD0     		beq	.L4
 126:../Generated_Code/ExtIntLdd2.c **** 
 127:../Generated_Code/ExtIntLdd2.c ****     /* Clear the interrupt flag */
 128:../Generated_Code/ExtIntLdd2.c ****     PORT_PDD_ClearPinInterruptFlag(ExtIntLdd2_PORTCONTROL_BASE_ADDRESS, ExtIntLdd2_PIN_INDEX);
 158              		.loc 1 128 0
 159 001a 084B     		ldr	r3, .L6+4
 160 001c 074A     		ldr	r2, .L6+4
 161 001e 526B     		ldr	r2, [r2, #52]
 162 0020 8021     		mov	r1, #128
 163 0022 4904     		lsl	r1, r1, #17
 164 0024 0A43     		orr	r2, r1
 165 0026 5A63     		str	r2, [r3, #52]
 129:../Generated_Code/ExtIntLdd2.c **** 
 130:../Generated_Code/ExtIntLdd2.c ****     /* Call OnInterrupt event */
 131:../Generated_Code/ExtIntLdd2.c ****     ExtIntLdd2_OnInterrupt(DeviceDataPrv->UserData);
 166              		.loc 1 131 0
 167 0028 7B68     		ldr	r3, [r7, #4]
 168 002a 1B68     		ldr	r3, [r3]
 169 002c 181C     		mov	r0, r3
 170 002e FFF7FEFF 		bl	ExtIntLdd2_OnInterrupt
 171              	.L4:
 132:../Generated_Code/ExtIntLdd2.c ****   }
 133:../Generated_Code/ExtIntLdd2.c **** }
 172              		.loc 1 133 0
 173 0032 BD46     		mov	sp, r7
 174 0034 02B0     		add	sp, sp, #8
 175              		@ sp needed for prologue
 176 0036 80BD     		pop	{r7, pc}
 177              	.L7:
 178              		.align	2
 179              	.L6:
 180 0038 00000000 		.word	INT_PORTA__DEFAULT_RTOS_ISRPARAM
 181 003c 00900440 		.word	1074040832
 182              		.cfi_endproc
 183              	.LFE1:
 185              		.section	.text.ExtIntLdd2_GetVal,"ax",%progbits
 186              		.align	2
 187              		.global	ExtIntLdd2_GetVal
 188              		.code	16
 189              		.thumb_func
 191              	ExtIntLdd2_GetVal:
 192              	.LFB2:
 134:../Generated_Code/ExtIntLdd2.c **** /*
 135:../Generated_Code/ExtIntLdd2.c **** ** ===================================================================
 136:../Generated_Code/ExtIntLdd2.c **** **     Method      :  ExtIntLdd2_GetVal (component ExtInt_LDD)
 137:../Generated_Code/ExtIntLdd2.c **** **
 138:../Generated_Code/ExtIntLdd2.c **** **     Description :
 139:../Generated_Code/ExtIntLdd2.c **** **         Returns the actual value of the input pin of the component.
 140:../Generated_Code/ExtIntLdd2.c **** **     Parameters  :
 141:../Generated_Code/ExtIntLdd2.c **** **         NAME            - DESCRIPTION
 142:../Generated_Code/ExtIntLdd2.c **** **       * DeviceDataPtr   - Device data structure
 143:../Generated_Code/ExtIntLdd2.c **** **                           pointer returned by <Init> method.
 144:../Generated_Code/ExtIntLdd2.c **** **     Returns     :
 145:../Generated_Code/ExtIntLdd2.c **** **         ---             - Returned input value. Possible values:
 146:../Generated_Code/ExtIntLdd2.c **** **                           <false> - logical "0" (Low level) <true> -
 147:../Generated_Code/ExtIntLdd2.c **** **                           logical "1" (High level)
 148:../Generated_Code/ExtIntLdd2.c **** ** ===================================================================
 149:../Generated_Code/ExtIntLdd2.c **** */
 150:../Generated_Code/ExtIntLdd2.c **** bool ExtIntLdd2_GetVal(LDD_TDeviceData *DeviceDataPtr)
 151:../Generated_Code/ExtIntLdd2.c **** {
 193              		.loc 1 151 0
 194              		.cfi_startproc
 195 0000 80B5     		push	{r7, lr}
 196              	.LCFI6:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 82B0     		sub	sp, sp, #8
 201              	.LCFI7:
 202              		.cfi_def_cfa_offset 16
 203 0004 00AF     		add	r7, sp, #0
 204              	.LCFI8:
 205              		.cfi_def_cfa_register 7
 206 0006 7860     		str	r0, [r7, #4]
 152:../Generated_Code/ExtIntLdd2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 153:../Generated_Code/ExtIntLdd2.c **** 
 154:../Generated_Code/ExtIntLdd2.c ****   if ((GPIO_PDD_GetPortDataInput(ExtIntLdd2_MODULE_BASE_ADDRESS) & ExtIntLdd2_PIN_MASK) != 0U) {
 207              		.loc 1 154 0
 208 0008 064B     		ldr	r3, .L11
 209 000a 1B69     		ldr	r3, [r3, #16]
 210 000c 1A1C     		mov	r2, r3
 211 000e 8023     		mov	r3, #128
 212 0010 9B01     		lsl	r3, r3, #6
 213 0012 1340     		and	r3, r2
 214 0014 01D0     		beq	.L9
 155:../Generated_Code/ExtIntLdd2.c ****     return TRUE;
 215              		.loc 1 155 0
 216 0016 0123     		mov	r3, #1
 217 0018 00E0     		b	.L10
 218              	.L9:
 156:../Generated_Code/ExtIntLdd2.c ****   }
 157:../Generated_Code/ExtIntLdd2.c ****   else {
 158:../Generated_Code/ExtIntLdd2.c ****     return FALSE;
 219              		.loc 1 158 0
 220 001a 0023     		mov	r3, #0
 221              	.L10:
 159:../Generated_Code/ExtIntLdd2.c ****   }
 160:../Generated_Code/ExtIntLdd2.c **** }
 222              		.loc 1 160 0
 223 001c 181C     		mov	r0, r3
 224 001e BD46     		mov	sp, r7
 225 0020 02B0     		add	sp, sp, #8
 226              		@ sp needed for prologue
 227 0022 80BD     		pop	{r7, pc}
 228              	.L12:
 229              		.align	2
 230              	.L11:
 231 0024 00F00F40 		.word	1074786304
 232              		.cfi_endproc
 233              	.LFE2:
 235              		.text
 236              	.Letext0:
 237              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 238              		.file 3 "../Generated_Code/PE_Types.h"
 239              		.file 4 "../Generated_Code/IO_Map.h"
 240              		.file 5 "../Generated_Code/PE_LDD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ExtIntLdd2.c
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:24     .bss.INT_PORTA__DEFAULT_RTOS_ISRPARAM:00000000 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:27     .bss.INT_PORTA__DEFAULT_RTOS_ISRPARAM:00000000 INT_PORTA__DEFAULT_RTOS_ISRPARAM
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:30     .text.ExtIntLdd2_Init:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:35     .text.ExtIntLdd2_Init:00000000 ExtIntLdd2_Init
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:114    .text.ExtIntLdd2_Init:00000068 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:126    .text.ExtIntLdd2_Interrupt:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:131    .text.ExtIntLdd2_Interrupt:00000000 ExtIntLdd2_Interrupt
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:180    .text.ExtIntLdd2_Interrupt:00000038 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:186    .text.ExtIntLdd2_GetVal:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:191    .text.ExtIntLdd2_GetVal:00000000 ExtIntLdd2_GetVal
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccxfj5ov.s:231    .text.ExtIntLdd2_GetVal:00000024 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
ExtIntLdd2_OnInterrupt

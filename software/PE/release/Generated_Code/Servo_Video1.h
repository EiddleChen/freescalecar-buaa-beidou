/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : Servo_Video1.h
**     Project     : ProcessorExpert
**     Processor   : MKL25Z128VLK4
**     Component   : PWM
**     Version     : Component 02.238, Driver 01.00, CPU db: 3.00.000
**     Compiler    : GNU C Compiler
**     Date/Time   : 2013-05-25, 21:24, # CodeGen: 82
**     Abstract    :
**         This component implements a pulse-width modulation generator
**         that generates signal with variable duty and fixed cycle. 
**     Settings    :
**         Used output pin             : 
**             ----------------------------------------------------
**                Number (on package)  |    Name
**             ----------------------------------------------------
**                       43            |  ADC0_SE8/TSI0_CH0/PTB0/LLWU_P5/I2C0_SCL/TPM1_CH0
**             ----------------------------------------------------
**
**         Timer name                  : TPM1_CNT [16-bit]
**         Counter                     : TPM1_CNT  [0x40039004]
**         Mode register               : TPM1_SC   [0x40039000]
**         Run register                : TPM1_SC   [0x40039000]
**         Prescaler                   : TPM1_SC   [0x40039000]
**         Compare register            : TPM1_C0V  [0x40039010]
**         Flip-flop register          : TPM1_C0SC [0x4003900C]
**
**         Interrupt name              : INT_TPM1
**         Interrupt enable reg.       : TPM1_C1SC [0x40039014]
**         Priority                    : 2
**         User handling procedure     : Servo_Video1_OnEnd
**         This event is called when the 1 of cycles is generated
**
**         Port name                   : PTB
**         Bit number (in port)        : 0
**         Bit mask of the port        : 0x0001
**         Port data register          : GPIOB_PDOR [0x400FF040]
**         Port control register       : GPIOB_PDDR [0x400FF054]
**
**         Initialization:
**              Output level           : low
**              Timer                  : Enabled
**              Event                  : Enabled
**         High speed mode
**             Prescaler               : divide-by-[driven by slave component]
**             Clock                   : [driven by slave component] Hz
**           Initial value of            period     pulse width
**             Xtal ticks              : ---        ---
**             microseconds            : ---        ---
**             milliseconds            : 12         1
**             seconds                 : ---        ---
**             seconds (real)          : 12         1
**
**     Contents    :
**         SetRatio16 - byte Servo_Video1_SetRatio16(word Ratio);
**         SetDutyUS  - byte Servo_Video1_SetDutyUS(word Time);
**         SetDutyMS  - byte Servo_Video1_SetDutyMS(word Time);
**
**     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __Servo_Video1_H
#define __Servo_Video1_H

/* MODULE Servo_Video1. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "PwmLdd5.h"

#include "Cpu.h"


#define Servo_Video1_PERIOD_VALUE PwmLdd5_PERIOD_VALUE /* Initial period value in ticks of the timer. It is available only if the bean is enabled in high speed mode. */
#define Servo_Video1_PERIOD_VALUE_HIGH PwmLdd5_PERIOD_VALUE_0 /* Period value in ticks of the timer in high speed mode. It is available only if the bean is enabled in high speed mode. */


void PwmLdd5_OnEnd(LDD_TUserData *UserDataPtr);
/*
** ===================================================================
**     Method      :  Servo_Video1_OnEnd (component PWM)
**
**     Description :
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

/*
** ===================================================================
**     Method      :  Servo_Video1_SetRatio16 (component PWM)
**
**     Description :
**         This method sets a new duty-cycle ratio. Ratio is expressed
**         as a 16-bit unsigned integer number. 0 - FFFF value is
**         proportional to ratio 0 - 100%. The method is available
**         only if it is not selected list of predefined values in
**         <Starting pulse width> property. 
**         Note: Calculated duty depends on the timer possibilities and
**         on the selected period.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Ratio           - Ratio to set. 0 - 65535 value is
**                           proportional to ratio 0 - 100%
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
** ===================================================================
*/
#define Servo_Video1_SetRatio16(Ratio) (PwmLdd5_SetRatio16(PwmLdd5_DeviceData, Ratio))

/*
** ===================================================================
**     Method      :  Servo_Video1_SetDutyUS (component PWM)
**
**     Description :
**         This method sets the new duty value of the output signal.
**         The duty is expressed in microseconds as a 16-bit
**         unsigned integer number.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Time            - Duty to set [in microseconds]
**                      (0 to --- us in high speed mode)
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_MATH - Overflow during evaluation
**                           ERR_RANGE - Parameter out of range
** ===================================================================
*/
#define Servo_Video1_SetDutyUS(Time) (PwmLdd5_SetDutyUS(PwmLdd5_DeviceData, Time))

/*
** ===================================================================
**     Method      :  Servo_Video1_SetDutyMS (component PWM)
**
**     Description :
**         This method sets the new duty value of the output signal.
**         The duty is expressed in milliseconds as a 16-bit
**         unsigned integer number.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Time            - Duty to set [in milliseconds]
**                      (0 to 12 ms in high speed mode)
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_MATH - Overflow during evaluation
**                           ERR_RANGE - Parameter out of range
** ===================================================================
*/
#define Servo_Video1_SetDutyMS(Time) (PwmLdd5_SetDutyMS(PwmLdd5_DeviceData, Time))

/* END Servo_Video1. */

#endif 
/* ifndef __Servo_Video1_H */
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.0 [05.03]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/

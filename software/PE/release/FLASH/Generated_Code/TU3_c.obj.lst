   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU3.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	8
  22      00000000 
  23              		.section	.bss.INT_TPM2__DEFAULT_RTOS_ISRPARAM,"aw",%nobits
  24              		.align	2
  27              	INT_TPM2__DEFAULT_RTOS_ISRPARAM:
  28 0000 00000000 		.space	4
  29              		.section	.text.TU3_Init,"ax",%progbits
  30              		.align	2
  31              		.global	TU3_Init
  32              		.code	16
  33              		.thumb_func
  35              	TU3_Init:
  36              	.LFB0:
  37              		.file 1 "../Generated_Code/TU3.c"
   1:../Generated_Code/TU3.c **** /** ###################################################################
   2:../Generated_Code/TU3.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU3.c **** **     Filename    : TU3.c
   4:../Generated_Code/TU3.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU3.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU3.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU3.c **** **     Version     : Component 01.139, Driver 01.09, CPU db: 3.00.000
   8:../Generated_Code/TU3.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU3.c **** **     Date/Time   : 2013-05-20, 15:22, # CodeGen: 73
  10:../Generated_Code/TU3.c **** **     Abstract    :
  11:../Generated_Code/TU3.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU3.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU3.c **** **     Settings    :
  14:../Generated_Code/TU3.c **** **          Component name                                 : TU3
  15:../Generated_Code/TU3.c **** **          Module name                                    : TPM2
  16:../Generated_Code/TU3.c **** **          Counter                                        : TPM2_CNT
  17:../Generated_Code/TU3.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU3.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU3.c **** **          Value type                                     : Optimal
  20:../Generated_Code/TU3.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU3.c **** **            Counter frequency                            : 3 MHz
  22:../Generated_Code/TU3.c **** **          Counter restart                                : On-match
  23:../Generated_Code/TU3.c **** **            Period device                                : TPM2_MOD
  24:../Generated_Code/TU3.c **** **            Period                                       : 80 ?s
  25:../Generated_Code/TU3.c **** **            Interrupt                                    : Enabled
  26:../Generated_Code/TU3.c **** **              Interrupt                                  : INT_TPM2
  27:../Generated_Code/TU3.c **** **              Interrupt priority                         : high priority
  28:../Generated_Code/TU3.c **** **          Channel list                                   : 0
  29:../Generated_Code/TU3.c **** **          Initialization                                 : 
  30:../Generated_Code/TU3.c **** **            Enabled in init. code                        : yes
  31:../Generated_Code/TU3.c **** **            Auto initialization                          : no
  32:../Generated_Code/TU3.c **** **            Event mask                                   : 
  33:../Generated_Code/TU3.c **** **              OnCounterRestart                           : Enabled
  34:../Generated_Code/TU3.c **** **              OnChannel0                                 : Disabled
  35:../Generated_Code/TU3.c **** **              OnChannel1                                 : Disabled
  36:../Generated_Code/TU3.c **** **              OnChannel2                                 : Disabled
  37:../Generated_Code/TU3.c **** **              OnChannel3                                 : Disabled
  38:../Generated_Code/TU3.c **** **              OnChannel4                                 : Disabled
  39:../Generated_Code/TU3.c **** **              OnChannel5                                 : Disabled
  40:../Generated_Code/TU3.c **** **              OnChannel6                                 : Disabled
  41:../Generated_Code/TU3.c **** **              OnChannel7                                 : Disabled
  42:../Generated_Code/TU3.c **** **          CPU clock/configuration selection              : 
  43:../Generated_Code/TU3.c **** **            Clock configuration 0                        : This component enabled
  44:../Generated_Code/TU3.c **** **            Clock configuration 1                        : This component disabled
  45:../Generated_Code/TU3.c **** **            Clock configuration 2                        : This component disabled
  46:../Generated_Code/TU3.c **** **            Clock configuration 3                        : This component disabled
  47:../Generated_Code/TU3.c **** **            Clock configuration 4                        : This component disabled
  48:../Generated_Code/TU3.c **** **            Clock configuration 5                        : This component disabled
  49:../Generated_Code/TU3.c **** **            Clock configuration 6                        : This component disabled
  50:../Generated_Code/TU3.c **** **            Clock configuration 7                        : This component disabled
  51:../Generated_Code/TU3.c **** **     Contents    :
  52:../Generated_Code/TU3.c **** **         Init   - LDD_TDeviceData* TU3_Init(LDD_TUserData *UserDataPtr);
  53:../Generated_Code/TU3.c **** **         Deinit - void TU3_Deinit(LDD_TDeviceData *DeviceDataPtr);
  54:../Generated_Code/TU3.c **** **
  55:../Generated_Code/TU3.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  56:../Generated_Code/TU3.c **** **     
  57:../Generated_Code/TU3.c **** **     http      : www.freescale.com
  58:../Generated_Code/TU3.c **** **     mail      : support@freescale.com
  59:../Generated_Code/TU3.c **** ** ###################################################################*/
  60:../Generated_Code/TU3.c **** 
  61:../Generated_Code/TU3.c **** /* MODULE TU3. */
  62:../Generated_Code/TU3.c **** 
  63:../Generated_Code/TU3.c **** #include "Events.h"
  64:../Generated_Code/TU3.c **** #include "TU3.h"
  65:../Generated_Code/TU3.c **** /* {Default RTOS Adapter} No RTOS includes */
  66:../Generated_Code/TU3.c **** #include "IO_Map.h"
  67:../Generated_Code/TU3.c **** 
  68:../Generated_Code/TU3.c **** 
  69:../Generated_Code/TU3.c **** typedef struct {
  70:../Generated_Code/TU3.c ****   LDD_TEventMask EnEvents;             /* Enable/Disable events mask */
  71:../Generated_Code/TU3.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
  72:../Generated_Code/TU3.c **** } TU3_TDeviceData;
  73:../Generated_Code/TU3.c **** 
  74:../Generated_Code/TU3.c **** typedef TU3_TDeviceData *TU3_TDeviceDataPtr; /* Pointer to the device data structure. */
  75:../Generated_Code/TU3.c **** 
  76:../Generated_Code/TU3.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  77:../Generated_Code/TU3.c **** static TU3_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  78:../Generated_Code/TU3.c **** /* {Default RTOS Adapter} Global variable used for passing a parameter into ISR */
  79:../Generated_Code/TU3.c **** static TU3_TDeviceDataPtr INT_TPM2__DEFAULT_RTOS_ISRPARAM;
  80:../Generated_Code/TU3.c **** 
  81:../Generated_Code/TU3.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERUNIT_ON_COUNTER_RESTART)
  82:../Generated_Code/TU3.c **** 
  83:../Generated_Code/TU3.c **** /* Internal method prototypes */
  84:../Generated_Code/TU3.c **** /*
  85:../Generated_Code/TU3.c **** ** ===================================================================
  86:../Generated_Code/TU3.c **** **     Method      :  TU3_Init (component TimerUnit_LDD)
  87:../Generated_Code/TU3.c **** **
  88:../Generated_Code/TU3.c **** **     Description :
  89:../Generated_Code/TU3.c **** **         Initializes the device. Allocates memory for the device data
  90:../Generated_Code/TU3.c **** **         structure, allocates interrupt vectors and sets interrupt
  91:../Generated_Code/TU3.c **** **         priority, sets pin routing, sets timing, etc. If the
  92:../Generated_Code/TU3.c **** **         property <"Enable in init. code"> is set to "yes" value then
  93:../Generated_Code/TU3.c **** **         the device is also enabled (see the description of the
  94:../Generated_Code/TU3.c **** **         <Enable> method). In this case the <Enable> method is not
  95:../Generated_Code/TU3.c **** **         necessary and needn't to be generated. This method can be
  96:../Generated_Code/TU3.c **** **         called only once. Before the second call of Init the <Deinit>
  97:../Generated_Code/TU3.c **** **         must be called first.
  98:../Generated_Code/TU3.c **** **     Parameters  :
  99:../Generated_Code/TU3.c **** **         NAME            - DESCRIPTION
 100:../Generated_Code/TU3.c **** **       * UserDataPtr     - Pointer to the user or
 101:../Generated_Code/TU3.c **** **                           RTOS specific data. This pointer will be
 102:../Generated_Code/TU3.c **** **                           passed as an event or callback parameter.
 103:../Generated_Code/TU3.c **** **     Returns     :
 104:../Generated_Code/TU3.c **** **         ---             - Pointer to the dynamically allocated
 105:../Generated_Code/TU3.c **** **                           private structure or NULL if there was an
 106:../Generated_Code/TU3.c **** **                           error.
 107:../Generated_Code/TU3.c **** ** ===================================================================
 108:../Generated_Code/TU3.c **** */
 109:../Generated_Code/TU3.c **** LDD_TDeviceData* TU3_Init(LDD_TUserData *UserDataPtr)
 110:../Generated_Code/TU3.c **** {
  38              		.loc 1 110 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 84B0     		sub	sp, sp, #16
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
 111:../Generated_Code/TU3.c ****   /* Allocate device structure */
 112:../Generated_Code/TU3.c ****   TU3_TDeviceData *DeviceDataPrv;
 113:../Generated_Code/TU3.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 114:../Generated_Code/TU3.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  52              		.loc 1 114 0
  53 0008 214B     		ldr	r3, .L2
  54 000a FB60     		str	r3, [r7, #12]
 115:../Generated_Code/TU3.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  55              		.loc 1 115 0
  56 000c FB68     		ldr	r3, [r7, #12]
  57 000e 7A68     		ldr	r2, [r7, #4]
  58 0010 5A60     		str	r2, [r3, #4]
 116:../Generated_Code/TU3.c ****   /* Interrupt vector(s) allocation */
 117:../Generated_Code/TU3.c ****   /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the glo
 118:../Generated_Code/TU3.c ****   INT_TPM2__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
  59              		.loc 1 118 0
  60 0012 204B     		ldr	r3, .L2+4
  61 0014 FA68     		ldr	r2, [r7, #12]
  62 0016 1A60     		str	r2, [r3]
 119:../Generated_Code/TU3.c ****   /* SIM_SCGC6: TPM2=1 */
 120:../Generated_Code/TU3.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM2_MASK;                                                   
  63              		.loc 1 120 0
  64 0018 1F4A     		ldr	r2, .L2+8
  65 001a 1F49     		ldr	r1, .L2+8
  66 001c 1F4B     		ldr	r3, .L2+12
  67 001e CB58     		ldr	r3, [r1, r3]
  68 0020 8021     		mov	r1, #128
  69 0022 C904     		lsl	r1, r1, #19
  70 0024 1943     		orr	r1, r3
  71 0026 1D4B     		ldr	r3, .L2+12
  72 0028 D150     		str	r1, [r2, r3]
 121:../Generated_Code/TU3.c ****   /* TPM2_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 122:../Generated_Code/TU3.c ****   TPM2_SC = 0x00U;                     /* Clear status and control register */
  73              		.loc 1 122 0
  74 002a 1D4B     		ldr	r3, .L2+16
  75 002c 0022     		mov	r2, #0
  76 002e 1A60     		str	r2, [r3]
 123:../Generated_Code/TU3.c ****   /* TPM2_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 124:../Generated_Code/TU3.c ****   TPM2_CNT = 0x00U;                    /* Reset counter register */
  77              		.loc 1 124 0
  78 0030 1B4B     		ldr	r3, .L2+16
  79 0032 0022     		mov	r2, #0
  80 0034 5A60     		str	r2, [r3, #4]
 125:../Generated_Code/TU3.c ****   /* TPM2_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 126:../Generated_Code/TU3.c ****   TPM2_C0SC = 0x00U;                   /* Clear channel status and control register */
  81              		.loc 1 126 0
  82 0036 1A4B     		ldr	r3, .L2+16
  83 0038 0022     		mov	r2, #0
  84 003a DA60     		str	r2, [r3, #12]
 127:../Generated_Code/TU3.c ****   /* TPM2_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 128:../Generated_Code/TU3.c ****   TPM2_C1SC = 0x00U;                   /* Clear channel status and control register */
  85              		.loc 1 128 0
  86 003c 184B     		ldr	r3, .L2+16
  87 003e 0022     		mov	r2, #0
  88 0040 5A61     		str	r2, [r3, #20]
 129:../Generated_Code/TU3.c ****   /* TPM2_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 130:../Generated_Code/TU3.c ****   TPM2_MOD = TPM_MOD_MOD(0xEF);        /* Set up modulo register */
  89              		.loc 1 130 0
  90 0042 174B     		ldr	r3, .L2+16
  91 0044 EF22     		mov	r2, #239
  92 0046 9A60     		str	r2, [r3, #8]
 131:../Generated_Code/TU3.c ****   DeviceDataPrv->EnEvents = 0x0100U;   /* Enable selected events */
  93              		.loc 1 131 0
  94 0048 FB68     		ldr	r3, [r7, #12]
  95 004a 8022     		mov	r2, #128
  96 004c 5200     		lsl	r2, r2, #1
  97 004e 1A60     		str	r2, [r3]
 132:../Generated_Code/TU3.c ****   /* NVIC_IPR4: PRI_19=0x40 */
 133:../Generated_Code/TU3.c ****   NVIC_IPR4 = (uint32_t)((NVIC_IPR4 & (uint32_t)~(uint32_t)(
  98              		.loc 1 133 0
  99 0050 144A     		ldr	r2, .L2+20
 100 0052 1449     		ldr	r1, .L2+20
 101 0054 C423     		mov	r3, #196
 102 0056 9B00     		lsl	r3, r3, #2
 103 0058 CB58     		ldr	r3, [r1, r3]
 104 005a 1B02     		lsl	r3, r3, #8
 105 005c 1B0A     		lsr	r3, r3, #8
 106 005e 8021     		mov	r1, #128
 107 0060 C905     		lsl	r1, r1, #23
 108 0062 1943     		orr	r1, r3
 109 0064 C423     		mov	r3, #196
 110 0066 9B00     		lsl	r3, r3, #2
 111 0068 D150     		str	r1, [r2, r3]
 134:../Generated_Code/TU3.c ****                NVIC_IP_PRI_19(0xBF)
 135:../Generated_Code/TU3.c ****               )) | (uint32_t)(
 136:../Generated_Code/TU3.c ****                NVIC_IP_PRI_19(0x40)
 137:../Generated_Code/TU3.c ****               ));                                                  
 138:../Generated_Code/TU3.c ****   /* NVIC_ISER: SETENA|=0x00080000 */
 139:../Generated_Code/TU3.c ****   NVIC_ISER |= NVIC_ISER_SETENA(0x00080000);                                                   
 112              		.loc 1 139 0
 113 006a 0E4B     		ldr	r3, .L2+20
 114 006c 0D4A     		ldr	r2, .L2+20
 115 006e 1268     		ldr	r2, [r2]
 116 0070 8021     		mov	r1, #128
 117 0072 0903     		lsl	r1, r1, #12
 118 0074 0A43     		orr	r2, r1
 119 0076 1A60     		str	r2, [r3]
 140:../Generated_Code/TU3.c ****   /* TPM2_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 141:../Generated_Code/TU3.c ****   TPM2_SC = (TPM_SC_TOIE_MASK | TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control 
 120              		.loc 1 141 0
 121 0078 094B     		ldr	r3, .L2+16
 122 007a 4B22     		mov	r2, #75
 123 007c 1A60     		str	r2, [r3]
 142:../Generated_Code/TU3.c ****   /* Registration of the device structure */
 143:../Generated_Code/TU3.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU3_ID,DeviceDataPrv);
 124              		.loc 1 143 0
 125 007e 0A4B     		ldr	r3, .L2+24
 126 0080 FA68     		ldr	r2, [r7, #12]
 127 0082 9A63     		str	r2, [r3, #56]
 144:../Generated_Code/TU3.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 128              		.loc 1 144 0
 129 0084 FB68     		ldr	r3, [r7, #12]
 145:../Generated_Code/TU3.c **** }
 130              		.loc 1 145 0
 131 0086 181C     		mov	r0, r3
 132 0088 BD46     		mov	sp, r7
 133 008a 04B0     		add	sp, sp, #16
 134              		@ sp needed for prologue
 135 008c 80BD     		pop	{r7, pc}
 136              	.L3:
 137 008e C046     		.align	2
 138              	.L2:
 139 0090 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 140 0094 00000000 		.word	INT_TPM2__DEFAULT_RTOS_ISRPARAM
 141 0098 00700440 		.word	1074032640
 142 009c 3C100000 		.word	4156
 143 00a0 00A00340 		.word	1073979392
 144 00a4 00E100E0 		.word	-536813312
 145 00a8 00000000 		.word	PE_LDD_DeviceDataList
 146              		.cfi_endproc
 147              	.LFE0:
 149              		.section	.text.TU3_Deinit,"ax",%progbits
 150              		.align	2
 151              		.global	TU3_Deinit
 152              		.code	16
 153              		.thumb_func
 155              	TU3_Deinit:
 156              	.LFB1:
 146:../Generated_Code/TU3.c **** 
 147:../Generated_Code/TU3.c **** /*
 148:../Generated_Code/TU3.c **** ** ===================================================================
 149:../Generated_Code/TU3.c **** **     Method      :  TU3_Deinit (component TimerUnit_LDD)
 150:../Generated_Code/TU3.c **** **
 151:../Generated_Code/TU3.c **** **     Description :
 152:../Generated_Code/TU3.c **** **         Deinitializes the device. Switches off the device, frees the
 153:../Generated_Code/TU3.c **** **         device data structure memory, interrupts vectors, etc.
 154:../Generated_Code/TU3.c **** **     Parameters  :
 155:../Generated_Code/TU3.c **** **         NAME            - DESCRIPTION
 156:../Generated_Code/TU3.c **** **       * DeviceDataPtr   - Device data structure
 157:../Generated_Code/TU3.c **** **                           pointer returned by Init method
 158:../Generated_Code/TU3.c **** **     Returns     : Nothing
 159:../Generated_Code/TU3.c **** ** ===================================================================
 160:../Generated_Code/TU3.c **** */
 161:../Generated_Code/TU3.c **** void TU3_Deinit(LDD_TDeviceData *DeviceDataPtr)
 162:../Generated_Code/TU3.c **** {
 157              		.loc 1 162 0
 158              		.cfi_startproc
 159 0000 80B5     		push	{r7, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 84B0     		sub	sp, sp, #16
 165              	.LCFI4:
 166              		.cfi_def_cfa_offset 24
 167 0004 00AF     		add	r7, sp, #0
 168              	.LCFI5:
 169              		.cfi_def_cfa_register 7
 170 0006 7860     		str	r0, [r7, #4]
 163:../Generated_Code/TU3.c ****   TU3_TDeviceData *DeviceDataPrv = (TU3_TDeviceData *)DeviceDataPtr;
 171              		.loc 1 163 0
 172 0008 7B68     		ldr	r3, [r7, #4]
 173 000a FB60     		str	r3, [r7, #12]
 164:../Generated_Code/TU3.c **** 
 165:../Generated_Code/TU3.c ****   (void)DeviceDataPrv;
 166:../Generated_Code/TU3.c ****   TPM_PDD_SelectPrescalerSource(TPM2_BASE_PTR, TPM_PDD_DISABLED);
 174              		.loc 1 166 0
 175 000c 054B     		ldr	r3, .L5
 176 000e 054A     		ldr	r2, .L5
 177 0010 1268     		ldr	r2, [r2]
 178 0012 9821     		mov	r1, #152
 179 0014 8A43     		bic	r2, r1
 180 0016 1A60     		str	r2, [r3]
 167:../Generated_Code/TU3.c ****   /* Interrupt vector(s) deallocation */
 168:../Generated_Code/TU3.c ****   /* {Default RTOS Adapter} Restore interrupt vector: IVT is static, no code is generated */
 169:../Generated_Code/TU3.c ****   /* Unregistration of the device structure */
 170:../Generated_Code/TU3.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TU3_ID);
 181              		.loc 1 170 0
 182 0018 034B     		ldr	r3, .L5+4
 183 001a 0022     		mov	r2, #0
 184 001c 9A63     		str	r2, [r3, #56]
 171:../Generated_Code/TU3.c ****   /* Deallocation of the device structure */
 172:../Generated_Code/TU3.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 173:../Generated_Code/TU3.c **** }
 185              		.loc 1 173 0
 186 001e BD46     		mov	sp, r7
 187 0020 04B0     		add	sp, sp, #16
 188              		@ sp needed for prologue
 189 0022 80BD     		pop	{r7, pc}
 190              	.L6:
 191              		.align	2
 192              	.L5:
 193 0024 00A00340 		.word	1073979392
 194 0028 00000000 		.word	PE_LDD_DeviceDataList
 195              		.cfi_endproc
 196              	.LFE1:
 198              		.section	.text.TU3_Interrupt,"ax",%progbits
 199              		.align	2
 200              		.global	TU3_Interrupt
 201              		.code	16
 202              		.thumb_func
 204              	TU3_Interrupt:
 205              	.LFB2:
 174:../Generated_Code/TU3.c **** 
 175:../Generated_Code/TU3.c **** /*
 176:../Generated_Code/TU3.c **** ** ===================================================================
 177:../Generated_Code/TU3.c **** **     Method      :  TU3_Interrupt (component TimerUnit_LDD)
 178:../Generated_Code/TU3.c **** **
 179:../Generated_Code/TU3.c **** **     Description :
 180:../Generated_Code/TU3.c **** **         The method services the interrupt of the selected peripheral(s)
 181:../Generated_Code/TU3.c **** **         and eventually invokes event(s) of the component.
 182:../Generated_Code/TU3.c **** **         This method is internal. It is used by Processor Expert only.
 183:../Generated_Code/TU3.c **** ** ===================================================================
 184:../Generated_Code/TU3.c **** */
 185:../Generated_Code/TU3.c **** PE_ISR(TU3_Interrupt)
 186:../Generated_Code/TU3.c **** {
 206              		.loc 1 186 0
 207              		.cfi_startproc
 208 0000 80B5     		push	{r7, lr}
 209              	.LCFI6:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              	.LCFI7:
 215              		.cfi_def_cfa_offset 16
 216 0004 00AF     		add	r7, sp, #0
 217              	.LCFI8:
 218              		.cfi_def_cfa_register 7
 187:../Generated_Code/TU3.c ****   /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
 188:../Generated_Code/TU3.c ****   TU3_TDeviceDataPtr DeviceDataPrv = INT_TPM2__DEFAULT_RTOS_ISRPARAM;
 219              		.loc 1 188 0
 220 0006 144B     		ldr	r3, .L10
 221 0008 1B68     		ldr	r3, [r3]
 222 000a 3B60     		str	r3, [r7]
 189:../Generated_Code/TU3.c **** 
 190:../Generated_Code/TU3.c ****   LDD_TEventMask State = 0U;
 223              		.loc 1 190 0
 224 000c 0023     		mov	r3, #0
 225 000e 7B60     		str	r3, [r7, #4]
 191:../Generated_Code/TU3.c **** 
 192:../Generated_Code/TU3.c ****   if ((TPM_PDD_GetOverflowInterruptFlag(TPM2_BASE_PTR)) != 0U) { /* Is the overflow interrupt flag 
 226              		.loc 1 192 0
 227 0010 124B     		ldr	r3, .L10+4
 228 0012 1B68     		ldr	r3, [r3]
 229 0014 1A1C     		mov	r2, r3
 230 0016 8023     		mov	r3, #128
 231 0018 1340     		and	r3, r2
 232 001a 04D0     		beq	.L8
 193:../Generated_Code/TU3.c ****     State |= LDD_TIMERUNIT_ON_COUNTER_RESTART; /* and set mask */
 233              		.loc 1 193 0
 234 001c 7B68     		ldr	r3, [r7, #4]
 235 001e 8022     		mov	r2, #128
 236 0020 5200     		lsl	r2, r2, #1
 237 0022 1343     		orr	r3, r2
 238 0024 7B60     		str	r3, [r7, #4]
 239              	.L8:
 194:../Generated_Code/TU3.c ****   }
 195:../Generated_Code/TU3.c ****   State &= DeviceDataPrv->EnEvents;    /* Handle only enabled interrupts */
 240              		.loc 1 195 0
 241 0026 3B68     		ldr	r3, [r7]
 242 0028 1A68     		ldr	r2, [r3]
 243 002a 7B68     		ldr	r3, [r7, #4]
 244 002c 1340     		and	r3, r2
 245 002e 7B60     		str	r3, [r7, #4]
 196:../Generated_Code/TU3.c ****   if (State & LDD_TIMERUNIT_ON_COUNTER_RESTART) { /* Is the overflow interrupt flag pending? */
 246              		.loc 1 196 0
 247 0030 7A68     		ldr	r2, [r7, #4]
 248 0032 8023     		mov	r3, #128
 249 0034 5B00     		lsl	r3, r3, #1
 250 0036 1340     		and	r3, r2
 251 0038 0AD0     		beq	.L7
 197:../Generated_Code/TU3.c ****     TPM_PDD_ClearOverflowInterruptFlag(TPM2_BASE_PTR); /* Clear flag */
 252              		.loc 1 197 0
 253 003a 084B     		ldr	r3, .L10+4
 254 003c 074A     		ldr	r2, .L10+4
 255 003e 1268     		ldr	r2, [r2]
 256 0040 8021     		mov	r1, #128
 257 0042 0A43     		orr	r2, r1
 258 0044 1A60     		str	r2, [r3]
 198:../Generated_Code/TU3.c ****     TU3_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 259              		.loc 1 198 0
 260 0046 3B68     		ldr	r3, [r7]
 261 0048 5B68     		ldr	r3, [r3, #4]
 262 004a 181C     		mov	r0, r3
 263 004c FFF7FEFF 		bl	TU3_OnCounterRestart
 264              	.L7:
 199:../Generated_Code/TU3.c ****   }
 200:../Generated_Code/TU3.c **** }
 265              		.loc 1 200 0
 266 0050 BD46     		mov	sp, r7
 267 0052 02B0     		add	sp, sp, #8
 268              		@ sp needed for prologue
 269 0054 80BD     		pop	{r7, pc}
 270              	.L11:
 271 0056 C046     		.align	2
 272              	.L10:
 273 0058 00000000 		.word	INT_TPM2__DEFAULT_RTOS_ISRPARAM
 274 005c 00A00340 		.word	1073979392
 275              		.cfi_endproc
 276              	.LFE2:
 278              		.text
 279              	.Letext0:
 280              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 281              		.file 3 "C:/workspace/USBDM/Generated_Code/IO_Map.h"
 282              		.file 4 "C:/workspace/USBDM/Generated_Code/PE_LDD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU3.c
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:24     .bss.INT_TPM2__DEFAULT_RTOS_ISRPARAM:00000000 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:27     .bss.INT_TPM2__DEFAULT_RTOS_ISRPARAM:00000000 INT_TPM2__DEFAULT_RTOS_ISRPARAM
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:30     .text.TU3_Init:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:35     .text.TU3_Init:00000000 TU3_Init
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:139    .text.TU3_Init:00000090 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:150    .text.TU3_Deinit:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:155    .text.TU3_Deinit:00000000 TU3_Deinit
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:193    .text.TU3_Deinit:00000024 $d
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:199    .text.TU3_Interrupt:00000000 $t
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:204    .text.TU3_Interrupt:00000000 TU3_Interrupt
C:\DOCUME~1\chenty\LOCALS~1\Temp\ccA5yZna.s:273    .text.TU3_Interrupt:00000058 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
TU3_OnCounterRestart
